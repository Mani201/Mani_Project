
moter_dust.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000012c  00800100  000014ca  0000155e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080022c  0080022c  0000168a  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  0000168c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00002310  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000024c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000286  00000000  00000000  00002626  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002687  00000000  00000000  000028ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000107d  00000000  00000000  00004f33  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001d36  00000000  00000000  00005fb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000210  00000000  00000000  00007ce8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000062d  00000000  00000000  00007ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001656  00000000  00000000  00008525  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000004e8  00000000  00000000  00009b7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000d8  00000000  00000000  0000a063  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e0       	ldi	r17, 0x02	; 2
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ea ec       	ldi	r30, 0xCA	; 202
      a0:	f4 e1       	ldi	r31, 0x14	; 20
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ac 32       	cpi	r26, 0x2C	; 44
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	12 e0       	ldi	r17, 0x02	; 2
      b4:	ac e2       	ldi	r26, 0x2C	; 44
      b6:	b2 e0       	ldi	r27, 0x02	; 2
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	af 32       	cpi	r26, 0x2F	; 47
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 67 01 	call	0x2ce	; 0x2ce <main>
      c6:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <moter_start>:

int flag = 1;

// 정방향 모터 회전 코드
int moter_start(int dat){
	for(int i=0;i<dat;i++){
      ce:	20 e0       	ldi	r18, 0x00	; 0
      d0:	30 e0       	ldi	r19, 0x00	; 0
	// 아래 코드를 50번 반복하면 360도 회전함 ( 아래코드 한번 실행 시 7.2도 회전)
		for(int j=0;j<50;j++){
		PORTD = 0x03;
      d2:	f3 e0       	ldi	r31, 0x03	; 3
		_delay_ms(5);
	
		PORTD = 0x06;
      d4:	e6 e0       	ldi	r30, 0x06	; 6
		_delay_ms(5);
		
		PORTD = 0x0c;
      d6:	7c e0       	ldi	r23, 0x0C	; 12
		_delay_ms(5);
		
		PORTD = 0x09 ;
      d8:	69 e0       	ldi	r22, 0x09	; 9

int flag = 1;

// 정방향 모터 회전 코드
int moter_start(int dat){
	for(int i=0;i<dat;i++){
      da:	23 c0       	rjmp	.+70     	; 0x122 <moter_start+0x54>
      dc:	42 e3       	ldi	r20, 0x32	; 50
      de:	50 e0       	ldi	r21, 0x00	; 0
	// 아래 코드를 50번 반복하면 360도 회전함 ( 아래코드 한번 실행 시 7.2도 회전)
		for(int j=0;j<50;j++){
		PORTD = 0x03;
      e0:	f2 bb       	out	0x12, r31	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      e2:	af e1       	ldi	r26, 0x1F	; 31
      e4:	be e4       	ldi	r27, 0x4E	; 78
      e6:	11 97       	sbiw	r26, 0x01	; 1
      e8:	f1 f7       	brne	.-4      	; 0xe6 <moter_start+0x18>
      ea:	00 c0       	rjmp	.+0      	; 0xec <moter_start+0x1e>
      ec:	00 00       	nop
		_delay_ms(5);
	
		PORTD = 0x06;
      ee:	e2 bb       	out	0x12, r30	; 18
      f0:	af e1       	ldi	r26, 0x1F	; 31
      f2:	be e4       	ldi	r27, 0x4E	; 78
      f4:	11 97       	sbiw	r26, 0x01	; 1
      f6:	f1 f7       	brne	.-4      	; 0xf4 <moter_start+0x26>
      f8:	00 c0       	rjmp	.+0      	; 0xfa <moter_start+0x2c>
      fa:	00 00       	nop
		_delay_ms(5);
		
		PORTD = 0x0c;
      fc:	72 bb       	out	0x12, r23	; 18
      fe:	af e1       	ldi	r26, 0x1F	; 31
     100:	be e4       	ldi	r27, 0x4E	; 78
     102:	11 97       	sbiw	r26, 0x01	; 1
     104:	f1 f7       	brne	.-4      	; 0x102 <moter_start+0x34>
     106:	00 c0       	rjmp	.+0      	; 0x108 <moter_start+0x3a>
     108:	00 00       	nop
		_delay_ms(5);
		
		PORTD = 0x09 ;
     10a:	62 bb       	out	0x12, r22	; 18
     10c:	af e1       	ldi	r26, 0x1F	; 31
     10e:	be e4       	ldi	r27, 0x4E	; 78
     110:	11 97       	sbiw	r26, 0x01	; 1
     112:	f1 f7       	brne	.-4      	; 0x110 <moter_start+0x42>
     114:	00 c0       	rjmp	.+0      	; 0x116 <moter_start+0x48>
     116:	00 00       	nop
     118:	41 50       	subi	r20, 0x01	; 1
     11a:	50 40       	sbci	r21, 0x00	; 0

// 정방향 모터 회전 코드
int moter_start(int dat){
	for(int i=0;i<dat;i++){
	// 아래 코드를 50번 반복하면 360도 회전함 ( 아래코드 한번 실행 시 7.2도 회전)
		for(int j=0;j<50;j++){
     11c:	09 f7       	brne	.-62     	; 0xe0 <moter_start+0x12>

int flag = 1;

// 정방향 모터 회전 코드
int moter_start(int dat){
	for(int i=0;i<dat;i++){
     11e:	2f 5f       	subi	r18, 0xFF	; 255
     120:	3f 4f       	sbci	r19, 0xFF	; 255
     122:	28 17       	cp	r18, r24
     124:	39 07       	cpc	r19, r25
     126:	d4 f2       	brlt	.-76     	; 0xdc <moter_start+0xe>
		PORTD = 0x09 ;
		_delay_ms(5);
		}
	}
	//동작 끝나고 출력 제거 안하면 모터에 과부화 걸려서 발열 심해짐
	PORTD= 0x00;
     128:	12 ba       	out	0x12, r1	; 18
}
     12a:	08 95       	ret

0000012c <moter_back>:
// 역방향 모터 회전 코드
int moter_back(int dat){
	for(int i=0;i<dat;i++){
     12c:	20 e0       	ldi	r18, 0x00	; 0
     12e:	30 e0       	ldi	r19, 0x00	; 0
		for(int j=0;j<50;j++){
		PORTD = 0x09;
     130:	f9 e0       	ldi	r31, 0x09	; 9
		_delay_ms(5);
	
		PORTD = 0x0c;
     132:	ec e0       	ldi	r30, 0x0C	; 12
		_delay_ms(5);
		
		PORTD = 0x06;
     134:	76 e0       	ldi	r23, 0x06	; 6
		_delay_ms(5);
		
		PORTD = 0x03 ;
     136:	63 e0       	ldi	r22, 0x03	; 3
	//동작 끝나고 출력 제거 안하면 모터에 과부화 걸려서 발열 심해짐
	PORTD= 0x00;
}
// 역방향 모터 회전 코드
int moter_back(int dat){
	for(int i=0;i<dat;i++){
     138:	23 c0       	rjmp	.+70     	; 0x180 <moter_back+0x54>
     13a:	42 e3       	ldi	r20, 0x32	; 50
     13c:	50 e0       	ldi	r21, 0x00	; 0
		for(int j=0;j<50;j++){
		PORTD = 0x09;
     13e:	f2 bb       	out	0x12, r31	; 18
     140:	af e1       	ldi	r26, 0x1F	; 31
     142:	be e4       	ldi	r27, 0x4E	; 78
     144:	11 97       	sbiw	r26, 0x01	; 1
     146:	f1 f7       	brne	.-4      	; 0x144 <moter_back+0x18>
     148:	00 c0       	rjmp	.+0      	; 0x14a <moter_back+0x1e>
     14a:	00 00       	nop
		_delay_ms(5);
	
		PORTD = 0x0c;
     14c:	e2 bb       	out	0x12, r30	; 18
     14e:	af e1       	ldi	r26, 0x1F	; 31
     150:	be e4       	ldi	r27, 0x4E	; 78
     152:	11 97       	sbiw	r26, 0x01	; 1
     154:	f1 f7       	brne	.-4      	; 0x152 <moter_back+0x26>
     156:	00 c0       	rjmp	.+0      	; 0x158 <moter_back+0x2c>
     158:	00 00       	nop
		_delay_ms(5);
		
		PORTD = 0x06;
     15a:	72 bb       	out	0x12, r23	; 18
     15c:	af e1       	ldi	r26, 0x1F	; 31
     15e:	be e4       	ldi	r27, 0x4E	; 78
     160:	11 97       	sbiw	r26, 0x01	; 1
     162:	f1 f7       	brne	.-4      	; 0x160 <moter_back+0x34>
     164:	00 c0       	rjmp	.+0      	; 0x166 <moter_back+0x3a>
     166:	00 00       	nop
		_delay_ms(5);
		
		PORTD = 0x03 ;
     168:	62 bb       	out	0x12, r22	; 18
     16a:	af e1       	ldi	r26, 0x1F	; 31
     16c:	be e4       	ldi	r27, 0x4E	; 78
     16e:	11 97       	sbiw	r26, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <moter_back+0x42>
     172:	00 c0       	rjmp	.+0      	; 0x174 <moter_back+0x48>
     174:	00 00       	nop
     176:	41 50       	subi	r20, 0x01	; 1
     178:	50 40       	sbci	r21, 0x00	; 0
	PORTD= 0x00;
}
// 역방향 모터 회전 코드
int moter_back(int dat){
	for(int i=0;i<dat;i++){
		for(int j=0;j<50;j++){
     17a:	09 f7       	brne	.-62     	; 0x13e <moter_back+0x12>
	//동작 끝나고 출력 제거 안하면 모터에 과부화 걸려서 발열 심해짐
	PORTD= 0x00;
}
// 역방향 모터 회전 코드
int moter_back(int dat){
	for(int i=0;i<dat;i++){
     17c:	2f 5f       	subi	r18, 0xFF	; 255
     17e:	3f 4f       	sbci	r19, 0xFF	; 255
     180:	28 17       	cp	r18, r24
     182:	39 07       	cpc	r19, r25
     184:	d4 f2       	brlt	.-76     	; 0x13a <moter_back+0xe>
		
		PORTD = 0x03 ;
		_delay_ms(5);
		}
	}
	PORTD= 0x00;
     186:	12 ba       	out	0x12, r1	; 18
}
     188:	08 95       	ret

0000018a <get_value>:
// 먼지감지 센서 데이터 값 얻는 코드
 int get_value(void)
{
   ADMUX |= 0x40; //ADC 레지스터 설정
     18a:	3e 9a       	sbi	0x07, 6	; 7
    PORTB = 0x00; // 먼지센서 LED On
     18c:	18 ba       	out	0x18, r1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18e:	8f e5       	ldi	r24, 0x5F	; 95
     190:	94 e0       	ldi	r25, 0x04	; 4
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <get_value+0x8>
     196:	00 c0       	rjmp	.+0      	; 0x198 <get_value+0xe>
     198:	00 00       	nop
	_delay_us(280);
	ADCSRA = 0xc7; //adc enable, start, prescaler 128
     19a:	87 ec       	ldi	r24, 0xC7	; 199
     19c:	86 b9       	out	0x06, r24	; 6
    while(ADCSRA&(1 << ADIF) == 0); // 변환완료 될 때까지 대기
     19e:	86 b1       	in	r24, 0x06	; 6
     1a0:	95 ed       	ldi	r25, 0xD5	; 213
     1a2:	9a 95       	dec	r25
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <get_value+0x18>
     1a6:	00 00       	nop
    _delay_us(40);
	PORTB = 0x01; // 먼지센서 LED Off
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	8f e3       	ldi	r24, 0x3F	; 63
     1ae:	97 e9       	ldi	r25, 0x97	; 151
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <get_value+0x26>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <get_value+0x2c>
     1b6:	00 00       	nop
	_delay_us(9680);
    return ADC; // ADC값 반환
     1b8:	24 b1       	in	r18, 0x04	; 4
     1ba:	35 b1       	in	r19, 0x05	; 5
}
     1bc:	c9 01       	movw	r24, r18
     1be:	08 95       	ret

000001c0 <LCD_controller>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c0:	2f ef       	ldi	r18, 0xFF	; 255
     1c2:	36 e7       	ldi	r19, 0x76	; 118
     1c4:	41 e0       	ldi	r20, 0x01	; 1
     1c6:	21 50       	subi	r18, 0x01	; 1
     1c8:	30 40       	sbci	r19, 0x00	; 0
     1ca:	40 40       	sbci	r20, 0x00	; 0
     1cc:	e1 f7       	brne	.-8      	; 0x1c6 <LCD_controller+0x6>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCD_controller+0x10>
     1d0:	00 00       	nop

void LCD_controller(unsigned char control)
{
    _delay_ms(30);
    PORTC = 0x00; //RW clear.
     1d2:	15 ba       	out	0x15, r1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1d4:	00 00       	nop
    _delay_us(0.05); //RW & RS Setup time is 40ns min.
    PORTC = 0b00000100; // E set.
     1d6:	94 e0       	ldi	r25, 0x04	; 4
     1d8:	95 bb       	out	0x15, r25	; 21
     1da:	00 c0       	rjmp	.+0      	; 0x1dc <LCD_controller+0x1c>
    _delay_us(0.1); //Data Setup time is 80ns min.
    PORTA = control; // Data input.
     1dc:	8b bb       	out	0x1b, r24	; 27
     1de:	00 c0       	rjmp	.+0      	; 0x1e0 <LCD_controller+0x20>
     1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <LCD_controller+0x22>
     1e2:	00 00       	nop
    _delay_us(0.3); // valid data is 130ns min.
    PORTC = 0b00000011; // RS set. RW set. E clear.
     1e4:	83 e0       	ldi	r24, 0x03	; 3
     1e6:	85 bb       	out	0x15, r24	; 21
}
     1e8:	08 95       	ret

000001ea <LCD_data>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1ea:	ef e9       	ldi	r30, 0x9F	; 159
     1ec:	ff e0       	ldi	r31, 0x0F	; 15
     1ee:	31 97       	sbiw	r30, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_data+0x4>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_data+0xa>
     1f4:	00 00       	nop
 
void LCD_data(unsigned char Data)
{
    _delay_ms(1);
    PORTC = 0b00000001; //RS set. RW clear. E clear.
     1f6:	91 e0       	ldi	r25, 0x01	; 1
     1f8:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1fa:	00 00       	nop
    _delay_us(0.05); //RW & RS Setup time is 40ns min.
    PORTC = 0b00000101; // E set.
     1fc:	95 e0       	ldi	r25, 0x05	; 5
     1fe:	95 bb       	out	0x15, r25	; 21
     200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_data+0x18>
    _delay_us(0.1); //Data Setup time is 80ns min.
    PORTA = Data; // Data input.
     202:	8b bb       	out	0x1b, r24	; 27
     204:	f2 e0       	ldi	r31, 0x02	; 2
     206:	fa 95       	dec	r31
     208:	f1 f7       	brne	.-4      	; 0x206 <LCD_data+0x1c>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <LCD_data+0x22>
    _delay_us(0.5); // valid data min is 130ns.
    PORTC = 0b00000010; // RS clear. RW set. E clear.
     20c:	82 e0       	ldi	r24, 0x02	; 2
     20e:	85 bb       	out	0x15, r24	; 21
}
     210:	08 95       	ret

00000212 <LCD_string>:

void LCD_string(unsigned char address, unsigned char *Str)
{
     212:	ff 92       	push	r15
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	f8 2e       	mov	r15, r24
     21e:	8b 01       	movw	r16, r22
    int i=0;
    LCD_controller(address); // LCD display start position
     220:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <LCD_controller>
     224:	cf 2d       	mov	r28, r15
     226:	d0 e0       	ldi	r29, 0x00	; 0
    while(*Str != '\0')
     228:	0c c0       	rjmp	.+24     	; 0x242 <LCD_string+0x30>
    {
        if(address+i == 0x90)
     22a:	c0 39       	cpi	r28, 0x90	; 144
     22c:	d1 05       	cpc	r29, r1
     22e:	19 f4       	brne	.+6      	; 0x236 <LCD_string+0x24>
            LCD_controller(0xc0); // second line display
     230:	80 ec       	ldi	r24, 0xC0	; 192
     232:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <LCD_controller>
        LCD_data(*Str);
     236:	f8 01       	movw	r30, r16
     238:	81 91       	ld	r24, Z+
     23a:	8f 01       	movw	r16, r30
     23c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_data>
        i++;
        Str++;
     240:	21 96       	adiw	r28, 0x01	; 1

void LCD_string(unsigned char address, unsigned char *Str)
{
    int i=0;
    LCD_controller(address); // LCD display start position
    while(*Str != '\0')
     242:	f8 01       	movw	r30, r16
     244:	80 81       	ld	r24, Z
     246:	88 23       	and	r24, r24
     248:	81 f7       	brne	.-32     	; 0x22a <LCD_string+0x18>
            LCD_controller(0xc0); // second line display
        LCD_data(*Str);
        i++;
        Str++;
    }
}
     24a:	df 91       	pop	r29
     24c:	cf 91       	pop	r28
     24e:	1f 91       	pop	r17
     250:	0f 91       	pop	r16
     252:	ff 90       	pop	r15
     254:	08 95       	ret

00000256 <LCD_initialize>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     256:	8f ef       	ldi	r24, 0xFF	; 255
     258:	90 e7       	ldi	r25, 0x70	; 112
     25a:	a2 e0       	ldi	r26, 0x02	; 2
     25c:	81 50       	subi	r24, 0x01	; 1
     25e:	90 40       	sbci	r25, 0x00	; 0
     260:	a0 40       	sbci	r26, 0x00	; 0
     262:	e1 f7       	brne	.-8      	; 0x25c <LCD_initialize+0x6>
     264:	00 c0       	rjmp	.+0      	; 0x266 <LCD_initialize+0x10>
     266:	00 00       	nop
 
void LCD_initialize(void)
{
    /* 8bit interface mode */
    _delay_ms(50);
    LCD_controller(0x3c); // Function set. Use 2-line, display on.
     268:	8c e3       	ldi	r24, 0x3C	; 60
     26a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <LCD_controller>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     26e:	95 ed       	ldi	r25, 0xD5	; 213
     270:	9a 95       	dec	r25
     272:	f1 f7       	brne	.-4      	; 0x270 <LCD_initialize+0x1a>
     274:	00 00       	nop
    _delay_us(40); // wait for more than 39us.
    LCD_controller(0x0f); // Display ON/OFF Control. display,cursor,blink on
     276:	8f e0       	ldi	r24, 0x0F	; 15
     278:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <LCD_controller>
     27c:	a5 ed       	ldi	r26, 0xD5	; 213
     27e:	aa 95       	dec	r26
     280:	f1 f7       	brne	.-4      	; 0x27e <LCD_initialize+0x28>
     282:	00 00       	nop
    _delay_us(40); // wait for more than 39us.
    LCD_controller(0x01); // Display Clear.
     284:	81 e0       	ldi	r24, 0x01	; 1
     286:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <LCD_controller>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28a:	87 ee       	ldi	r24, 0xE7	; 231
     28c:	97 e1       	ldi	r25, 0x17	; 23
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <LCD_initialize+0x38>
     292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_initialize+0x3e>
     294:	00 00       	nop
    _delay_ms(1.53); // wait for more than 1.53ms.
    LCD_controller(0x06); // Entry Mode Set. I/D increment mode, entire shift off
     296:	86 e0       	ldi	r24, 0x06	; 6
     298:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <LCD_controller>
}
     29c:	08 95       	ret

0000029e <TX0_char>:
 
void TX0_char(char c){ while(!(UCSR0A&0x20)); UDR0=c; } //UART TX 함수
     29e:	5d 9b       	sbis	0x0b, 5	; 11
     2a0:	fe cf       	rjmp	.-4      	; 0x29e <TX0_char>
     2a2:	8c b9       	out	0x0c, r24	; 12
     2a4:	08 95       	ret

000002a6 <TX0_STR>:
void TX0_STR(char *s){ while(*s)TX0_char(*s++); } // UART TX 함수
     2a6:	ef 92       	push	r14
     2a8:	ff 92       	push	r15
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	e8 2e       	mov	r14, r24
     2b0:	e7 01       	movw	r28, r14
     2b2:	7e 01       	movw	r14, r28
     2b4:	f9 2e       	mov	r15, r25
     2b6:	e7 01       	movw	r28, r14
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <TX0_STR+0x18>
     2ba:	0e 94 4f 01 	call	0x29e	; 0x29e <TX0_char>
     2be:	89 91       	ld	r24, Y+
     2c0:	88 23       	and	r24, r24
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <TX0_STR+0x14>
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	ff 90       	pop	r15
     2ca:	ef 90       	pop	r14
     2cc:	08 95       	ret

000002ce <main>:


int main()
{
     2ce:	2f 92       	push	r2
     2d0:	3f 92       	push	r3
     2d2:	4f 92       	push	r4
     2d4:	5f 92       	push	r5
     2d6:	6f 92       	push	r6
     2d8:	7f 92       	push	r7
     2da:	8f 92       	push	r8
     2dc:	9f 92       	push	r9
     2de:	af 92       	push	r10
     2e0:	bf 92       	push	r11
     2e2:	cf 92       	push	r12
     2e4:	df 92       	push	r13
     2e6:	ef 92       	push	r14
     2e8:	ff 92       	push	r15
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	df 93       	push	r29
     2f0:	cf 93       	push	r28
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	60 97       	sbiw	r28, 0x10	; 16
     2f8:	0f b6       	in	r0, 0x3f	; 63
     2fa:	f8 94       	cli
     2fc:	de bf       	out	0x3e, r29	; 62
     2fe:	0f be       	out	0x3f, r0	; 63
     300:	cd bf       	out	0x3d, r28	; 61
    char print_Arr[16];
	float dust;
	float dust_v;
   

	DDRB = 0xff; // Dust sensor 
     302:	0f ef       	ldi	r16, 0xFF	; 255
     304:	07 bb       	out	0x17, r16	; 23
    DDRC = 0xff; // Control_bit
     306:	04 bb       	out	0x14, r16	; 20
    DDRA = 0xff; // Data_bit
     308:	0a bb       	out	0x1a, r16	; 26
	DDRD = 0xff; // setp moter
     30a:	01 bb       	out	0x11, r16	; 17
 
    LCD_initialize(); // 초기화 한번 때려주고
     30c:	0e 94 2b 01 	call	0x256	; 0x256 <LCD_initialize>
    
  
    UCSR0B=0x08; 
     310:	88 e0       	ldi	r24, 0x08	; 8
     312:	8a b9       	out	0x0a, r24	; 10
	UBRR0L=103;  //  9600
     314:	87 e6       	ldi	r24, 0x67	; 103
     316:	89 b9       	out	0x09, r24	; 9
  	PORTB= 0xff;
     318:	08 bb       	out	0x18, r16	; 24

int main()
{
	int dust_Average;
	int dust_sum;
	int dust_num=0;
     31a:	cc 24       	eor	r12, r12
     31c:	dd 24       	eor	r13, r13
			moter_stat = 2;
		}
		//평균값이 일정수치 이하일 경우 역방향 모터 동작
		else if(dust_Average <25 && moter_stat == 2){
			moter_back(10);
			moter_stat = 1;
     31e:	21 e0       	ldi	r18, 0x01	; 1
     320:	62 2e       	mov	r6, r18
     322:	71 2c       	mov	r7, r1
			dust_sum =0; 
		}
		//평균값이 일정 수치 이상일 경우 정방향 모터 동작
		if(dust_Average >= 25 && moter_stat == 1){
			moter_start(10);
			moter_stat = 2;
     324:	92 e0       	ldi	r25, 0x02	; 2
     326:	49 2e       	mov	r4, r25
     328:	51 2c       	mov	r5, r1
     32a:	8e 01       	movw	r16, r28
     32c:	0f 5f       	subi	r16, 0xFF	; 255
     32e:	1f 4f       	sbci	r17, 0xFF	; 255
		TX0_STR(print_Arr);
		LCD_string(0x80, print_Arr);
		}
		//먼지센서의 값이 소주점 한자리일 때 
		else{
		sprintf(print_Arr,"dust:0.%d  ",res);
     330:	8d e0       	ldi	r24, 0x0D	; 13
     332:	28 2e       	mov	r2, r24
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	38 2e       	mov	r3, r24
  	PORTB= 0xff;
        
    while(1)  
    {  

		res = get_value(); // 데이터 받아오기 0~1024 사이의 값
     338:	0e 94 c5 00 	call	0x18a	; 0x18a <get_value>
        dust = res;
     33c:	9c 01       	movw	r18, r24
     33e:	b9 01       	movw	r22, r18
     340:	88 27       	eor	r24, r24
     342:	77 fd       	sbrc	r23, 7
     344:	80 95       	com	r24
     346:	98 2f       	mov	r25, r24
     348:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__floatsisf>
		dust_v = dust * (5.0 / 1024.0); // 5V 전원 사용하니까 데이터 값 1당 V값 계산
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	40 ea       	ldi	r20, 0xA0	; 160
     352:	5b e3       	ldi	r21, 0x3B	; 59
     354:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__mulsf3>
		dust = dust_v * 0.17 - 0.1; // 먼지센서의 먼지값 계산 식
     358:	2b e7       	ldi	r18, 0x7B	; 123
     35a:	34 e1       	ldi	r19, 0x14	; 20
     35c:	4e e2       	ldi	r20, 0x2E	; 46
     35e:	5e e3       	ldi	r21, 0x3E	; 62
     360:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__mulsf3>
     364:	2d ec       	ldi	r18, 0xCD	; 205
     366:	3c ec       	ldi	r19, 0xCC	; 204
     368:	4c ec       	ldi	r20, 0xCC	; 204
     36a:	5d e3       	ldi	r21, 0x3D	; 61
     36c:	0e 94 b7 03 	call	0x76e	; 0x76e <__subsf3>
		res = (int)(dust * 100); // 무조건 소수점 나오니까 X100
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	48 ec       	ldi	r20, 0xC8	; 200
     376:	52 e4       	ldi	r21, 0x42	; 66
     378:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__mulsf3>
     37c:	0e 94 42 05 	call	0xa84	; 0xa84 <__fixsfsi>
     380:	7b 01       	movw	r14, r22

		
		dust_sum+= res; // 평균 내기위해 데이터 더하기
     382:	a6 0e       	add	r10, r22
     384:	b7 1e       	adc	r11, r23
		dust_num++;
     386:	08 94       	sec
     388:	c1 1c       	adc	r12, r1
     38a:	d1 1c       	adc	r13, r1

		if(dust_num == 10){  // 10번 더하면 평균내기
     38c:	3a e0       	ldi	r19, 0x0A	; 10
     38e:	c3 16       	cp	r12, r19
     390:	d1 04       	cpc	r13, r1
     392:	49 f4       	brne	.+18     	; 0x3a6 <main+0xd8>
			dust_Average = dust_sum / dust_num;
     394:	c5 01       	movw	r24, r10
     396:	b6 01       	movw	r22, r12
     398:	0e 94 25 07 	call	0xe4a	; 0xe4a <__divmodhi4>
     39c:	4b 01       	movw	r8, r22
			dust_num = 0;
     39e:	cc 24       	eor	r12, r12
     3a0:	dd 24       	eor	r13, r13
			dust_sum =0; 
     3a2:	aa 24       	eor	r10, r10
     3a4:	bb 24       	eor	r11, r11
     3a6:	80 91 1f 01 	lds	r24, 0x011F
     3aa:	90 91 20 01 	lds	r25, 0x0120
		}
		//평균값이 일정 수치 이상일 경우 정방향 모터 동작
		if(dust_Average >= 25 && moter_stat == 1){
     3ae:	a9 e1       	ldi	r26, 0x19	; 25
     3b0:	8a 16       	cp	r8, r26
     3b2:	91 04       	cpc	r9, r1
     3b4:	64 f0       	brlt	.+24     	; 0x3ce <main+0x100>
     3b6:	81 30       	cpi	r24, 0x01	; 1
     3b8:	91 05       	cpc	r25, r1
     3ba:	a1 f4       	brne	.+40     	; 0x3e4 <main+0x116>
			moter_start(10);
     3bc:	8a e0       	ldi	r24, 0x0A	; 10
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 67 00 	call	0xce	; 0xce <moter_start>
			moter_stat = 2;
     3c4:	50 92 20 01 	sts	0x0120, r5
     3c8:	40 92 1f 01 	sts	0x011F, r4
     3cc:	0b c0       	rjmp	.+22     	; 0x3e4 <main+0x116>
		}
		//평균값이 일정수치 이하일 경우 역방향 모터 동작
		else if(dust_Average <25 && moter_stat == 2){
     3ce:	82 30       	cpi	r24, 0x02	; 2
     3d0:	91 05       	cpc	r25, r1
     3d2:	41 f4       	brne	.+16     	; 0x3e4 <main+0x116>
			moter_back(10);
     3d4:	8a e0       	ldi	r24, 0x0A	; 10
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	0e 94 96 00 	call	0x12c	; 0x12c <moter_back>
			moter_stat = 1;
     3dc:	70 92 20 01 	sts	0x0120, r7
     3e0:	60 92 1f 01 	sts	0x011F, r6
		}
		
		//먼지센서의 값이 소수점 두자리일 때
		if(res/10 == 0){
     3e4:	c7 01       	movw	r24, r14
     3e6:	09 96       	adiw	r24, 0x09	; 9
     3e8:	83 31       	cpi	r24, 0x13	; 19
     3ea:	91 05       	cpc	r25, r1
     3ec:	e8 f4       	brcc	.+58     	; 0x428 <main+0x15a>
		sprintf(print_Arr,"dust:0.0%d  ",res);
     3ee:	00 d0       	rcall	.+0      	; 0x3f0 <main+0x122>
     3f0:	00 d0       	rcall	.+0      	; 0x3f2 <main+0x124>
     3f2:	00 d0       	rcall	.+0      	; 0x3f4 <main+0x126>
     3f4:	ed b7       	in	r30, 0x3d	; 61
     3f6:	fe b7       	in	r31, 0x3e	; 62
     3f8:	31 96       	adiw	r30, 0x01	; 1
     3fa:	ad b7       	in	r26, 0x3d	; 61
     3fc:	be b7       	in	r27, 0x3e	; 62
     3fe:	12 96       	adiw	r26, 0x02	; 2
     400:	1c 93       	st	X, r17
     402:	0e 93       	st	-X, r16
     404:	11 97       	sbiw	r26, 0x01	; 1
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	31 e0       	ldi	r19, 0x01	; 1
     40a:	33 83       	std	Z+3, r19	; 0x03
     40c:	22 83       	std	Z+2, r18	; 0x02
     40e:	f5 82       	std	Z+5, r15	; 0x05
     410:	e4 82       	std	Z+4, r14	; 0x04
     412:	0e 94 83 07 	call	0xf06	; 0xf06 <sprintf>
		TX0_STR(print_Arr);
     416:	8d b7       	in	r24, 0x3d	; 61
     418:	9e b7       	in	r25, 0x3e	; 62
     41a:	06 96       	adiw	r24, 0x06	; 6
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	f8 94       	cli
     420:	9e bf       	out	0x3e, r25	; 62
     422:	0f be       	out	0x3f, r0	; 63
     424:	8d bf       	out	0x3d, r24	; 61
     426:	1b c0       	rjmp	.+54     	; 0x45e <main+0x190>
		LCD_string(0x80, print_Arr);
		}
		//먼지센서의 값이 소주점 한자리일 때 
		else{
		sprintf(print_Arr,"dust:0.%d  ",res);
     428:	00 d0       	rcall	.+0      	; 0x42a <main+0x15c>
     42a:	00 d0       	rcall	.+0      	; 0x42c <main+0x15e>
     42c:	00 d0       	rcall	.+0      	; 0x42e <main+0x160>
     42e:	ed b7       	in	r30, 0x3d	; 61
     430:	fe b7       	in	r31, 0x3e	; 62
     432:	31 96       	adiw	r30, 0x01	; 1
     434:	ad b7       	in	r26, 0x3d	; 61
     436:	be b7       	in	r27, 0x3e	; 62
     438:	12 96       	adiw	r26, 0x02	; 2
     43a:	1c 93       	st	X, r17
     43c:	0e 93       	st	-X, r16
     43e:	11 97       	sbiw	r26, 0x01	; 1
     440:	33 82       	std	Z+3, r3	; 0x03
     442:	22 82       	std	Z+2, r2	; 0x02
     444:	f5 82       	std	Z+5, r15	; 0x05
     446:	e4 82       	std	Z+4, r14	; 0x04
     448:	0e 94 83 07 	call	0xf06	; 0xf06 <sprintf>
		TX0_STR(print_Arr);
     44c:	2d b7       	in	r18, 0x3d	; 61
     44e:	3e b7       	in	r19, 0x3e	; 62
     450:	2a 5f       	subi	r18, 0xFA	; 250
     452:	3f 4f       	sbci	r19, 0xFF	; 255
     454:	0f b6       	in	r0, 0x3f	; 63
     456:	f8 94       	cli
     458:	3e bf       	out	0x3e, r19	; 62
     45a:	0f be       	out	0x3f, r0	; 63
     45c:	2d bf       	out	0x3d, r18	; 61
     45e:	c8 01       	movw	r24, r16
     460:	0e 94 53 01 	call	0x2a6	; 0x2a6 <TX0_STR>
		LCD_string(0x80, print_Arr);
     464:	80 e8       	ldi	r24, 0x80	; 128
     466:	b8 01       	movw	r22, r16
     468:	0e 94 09 01 	call	0x212	; 0x212 <LCD_string>
     46c:	8f ef       	ldi	r24, 0xFF	; 255
     46e:	93 ed       	ldi	r25, 0xD3	; 211
     470:	a0 e3       	ldi	r26, 0x30	; 48
     472:	81 50       	subi	r24, 0x01	; 1
     474:	90 40       	sbci	r25, 0x00	; 0
     476:	a0 40       	sbci	r26, 0x00	; 0
     478:	e1 f7       	brne	.-8      	; 0x472 <main+0x1a4>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <main+0x1ae>
     47c:	00 00       	nop
     47e:	5c cf       	rjmp	.-328    	; 0x338 <main+0x6a>

00000480 <_fpadd_parts>:
     480:	a0 e0       	ldi	r26, 0x00	; 0
     482:	b0 e0       	ldi	r27, 0x00	; 0
     484:	e6 e4       	ldi	r30, 0x46	; 70
     486:	f2 e0       	ldi	r31, 0x02	; 2
     488:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__prologue_saves__+0x8>
     48c:	fc 01       	movw	r30, r24
     48e:	ea 01       	movw	r28, r20
     490:	80 81       	ld	r24, Z
     492:	82 30       	cpi	r24, 0x02	; 2
     494:	08 f4       	brcc	.+2      	; 0x498 <_fpadd_parts+0x18>
     496:	38 c1       	rjmp	.+624    	; 0x708 <_fpadd_parts+0x288>
     498:	db 01       	movw	r26, r22
     49a:	9c 91       	ld	r25, X
     49c:	92 30       	cpi	r25, 0x02	; 2
     49e:	08 f4       	brcc	.+2      	; 0x4a2 <_fpadd_parts+0x22>
     4a0:	30 c1       	rjmp	.+608    	; 0x702 <_fpadd_parts+0x282>
     4a2:	84 30       	cpi	r24, 0x04	; 4
     4a4:	59 f4       	brne	.+22     	; 0x4bc <_fpadd_parts+0x3c>
     4a6:	94 30       	cpi	r25, 0x04	; 4
     4a8:	09 f0       	breq	.+2      	; 0x4ac <_fpadd_parts+0x2c>
     4aa:	2e c1       	rjmp	.+604    	; 0x708 <_fpadd_parts+0x288>
     4ac:	91 81       	ldd	r25, Z+1	; 0x01
     4ae:	11 96       	adiw	r26, 0x01	; 1
     4b0:	8c 91       	ld	r24, X
     4b2:	11 97       	sbiw	r26, 0x01	; 1
     4b4:	98 17       	cp	r25, r24
     4b6:	09 f0       	breq	.+2      	; 0x4ba <_fpadd_parts+0x3a>
     4b8:	21 c1       	rjmp	.+578    	; 0x6fc <_fpadd_parts+0x27c>
     4ba:	26 c1       	rjmp	.+588    	; 0x708 <_fpadd_parts+0x288>
     4bc:	94 30       	cpi	r25, 0x04	; 4
     4be:	09 f4       	brne	.+2      	; 0x4c2 <_fpadd_parts+0x42>
     4c0:	20 c1       	rjmp	.+576    	; 0x702 <_fpadd_parts+0x282>
     4c2:	92 30       	cpi	r25, 0x02	; 2
     4c4:	b1 f4       	brne	.+44     	; 0x4f2 <_fpadd_parts+0x72>
     4c6:	82 30       	cpi	r24, 0x02	; 2
     4c8:	09 f0       	breq	.+2      	; 0x4cc <_fpadd_parts+0x4c>
     4ca:	1e c1       	rjmp	.+572    	; 0x708 <_fpadd_parts+0x288>
     4cc:	ca 01       	movw	r24, r20
     4ce:	af 01       	movw	r20, r30
     4d0:	28 e0       	ldi	r18, 0x08	; 8
     4d2:	da 01       	movw	r26, r20
     4d4:	0d 90       	ld	r0, X+
     4d6:	ad 01       	movw	r20, r26
     4d8:	dc 01       	movw	r26, r24
     4da:	0d 92       	st	X+, r0
     4dc:	cd 01       	movw	r24, r26
     4de:	21 50       	subi	r18, 0x01	; 1
     4e0:	c1 f7       	brne	.-16     	; 0x4d2 <_fpadd_parts+0x52>
     4e2:	db 01       	movw	r26, r22
     4e4:	11 96       	adiw	r26, 0x01	; 1
     4e6:	8c 91       	ld	r24, X
     4e8:	11 97       	sbiw	r26, 0x01	; 1
     4ea:	91 81       	ldd	r25, Z+1	; 0x01
     4ec:	89 23       	and	r24, r25
     4ee:	89 83       	std	Y+1, r24	; 0x01
     4f0:	0a c1       	rjmp	.+532    	; 0x706 <_fpadd_parts+0x286>
     4f2:	82 30       	cpi	r24, 0x02	; 2
     4f4:	09 f4       	brne	.+2      	; 0x4f8 <_fpadd_parts+0x78>
     4f6:	05 c1       	rjmp	.+522    	; 0x702 <_fpadd_parts+0x282>
     4f8:	c2 80       	ldd	r12, Z+2	; 0x02
     4fa:	d3 80       	ldd	r13, Z+3	; 0x03
     4fc:	db 01       	movw	r26, r22
     4fe:	12 96       	adiw	r26, 0x02	; 2
     500:	6d 90       	ld	r6, X+
     502:	7c 90       	ld	r7, X
     504:	13 97       	sbiw	r26, 0x03	; 3
     506:	24 81       	ldd	r18, Z+4	; 0x04
     508:	35 81       	ldd	r19, Z+5	; 0x05
     50a:	46 81       	ldd	r20, Z+6	; 0x06
     50c:	57 81       	ldd	r21, Z+7	; 0x07
     50e:	14 96       	adiw	r26, 0x04	; 4
     510:	ed 90       	ld	r14, X+
     512:	fd 90       	ld	r15, X+
     514:	0d 91       	ld	r16, X+
     516:	1c 91       	ld	r17, X
     518:	17 97       	sbiw	r26, 0x07	; 7
     51a:	c6 01       	movw	r24, r12
     51c:	86 19       	sub	r24, r6
     51e:	97 09       	sbc	r25, r7
     520:	5c 01       	movw	r10, r24
     522:	97 ff       	sbrs	r25, 7
     524:	04 c0       	rjmp	.+8      	; 0x52e <_fpadd_parts+0xae>
     526:	aa 24       	eor	r10, r10
     528:	bb 24       	eor	r11, r11
     52a:	a8 1a       	sub	r10, r24
     52c:	b9 0a       	sbc	r11, r25
     52e:	b0 e2       	ldi	r27, 0x20	; 32
     530:	ab 16       	cp	r10, r27
     532:	b1 04       	cpc	r11, r1
     534:	0c f0       	brlt	.+2      	; 0x538 <_fpadd_parts+0xb8>
     536:	61 c0       	rjmp	.+194    	; 0x5fa <_fpadd_parts+0x17a>
     538:	18 16       	cp	r1, r24
     53a:	19 06       	cpc	r1, r25
     53c:	6c f5       	brge	.+90     	; 0x598 <_fpadd_parts+0x118>
     53e:	37 01       	movw	r6, r14
     540:	48 01       	movw	r8, r16
     542:	0a 2c       	mov	r0, r10
     544:	04 c0       	rjmp	.+8      	; 0x54e <_fpadd_parts+0xce>
     546:	96 94       	lsr	r9
     548:	87 94       	ror	r8
     54a:	77 94       	ror	r7
     54c:	67 94       	ror	r6
     54e:	0a 94       	dec	r0
     550:	d2 f7       	brpl	.-12     	; 0x546 <_fpadd_parts+0xc6>
     552:	81 e0       	ldi	r24, 0x01	; 1
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	a0 e0       	ldi	r26, 0x00	; 0
     558:	b0 e0       	ldi	r27, 0x00	; 0
     55a:	0a 2c       	mov	r0, r10
     55c:	04 c0       	rjmp	.+8      	; 0x566 <_fpadd_parts+0xe6>
     55e:	88 0f       	add	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	aa 1f       	adc	r26, r26
     564:	bb 1f       	adc	r27, r27
     566:	0a 94       	dec	r0
     568:	d2 f7       	brpl	.-12     	; 0x55e <_fpadd_parts+0xde>
     56a:	01 97       	sbiw	r24, 0x01	; 1
     56c:	a1 09       	sbc	r26, r1
     56e:	b1 09       	sbc	r27, r1
     570:	8e 21       	and	r24, r14
     572:	9f 21       	and	r25, r15
     574:	a0 23       	and	r26, r16
     576:	b1 23       	and	r27, r17
     578:	ee 24       	eor	r14, r14
     57a:	ff 24       	eor	r15, r15
     57c:	87 01       	movw	r16, r14
     57e:	e3 94       	inc	r14
     580:	00 97       	sbiw	r24, 0x00	; 0
     582:	a1 05       	cpc	r26, r1
     584:	b1 05       	cpc	r27, r1
     586:	19 f4       	brne	.+6      	; 0x58e <_fpadd_parts+0x10e>
     588:	ee 24       	eor	r14, r14
     58a:	ff 24       	eor	r15, r15
     58c:	87 01       	movw	r16, r14
     58e:	e6 28       	or	r14, r6
     590:	f7 28       	or	r15, r7
     592:	08 29       	or	r16, r8
     594:	19 29       	or	r17, r9
     596:	3c c0       	rjmp	.+120    	; 0x610 <_fpadd_parts+0x190>
     598:	00 97       	sbiw	r24, 0x00	; 0
     59a:	d1 f1       	breq	.+116    	; 0x610 <_fpadd_parts+0x190>
     59c:	ca 0c       	add	r12, r10
     59e:	db 1c       	adc	r13, r11
     5a0:	39 01       	movw	r6, r18
     5a2:	4a 01       	movw	r8, r20
     5a4:	0a 2c       	mov	r0, r10
     5a6:	04 c0       	rjmp	.+8      	; 0x5b0 <_fpadd_parts+0x130>
     5a8:	96 94       	lsr	r9
     5aa:	87 94       	ror	r8
     5ac:	77 94       	ror	r7
     5ae:	67 94       	ror	r6
     5b0:	0a 94       	dec	r0
     5b2:	d2 f7       	brpl	.-12     	; 0x5a8 <_fpadd_parts+0x128>
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	a0 e0       	ldi	r26, 0x00	; 0
     5ba:	b0 e0       	ldi	r27, 0x00	; 0
     5bc:	0a 2c       	mov	r0, r10
     5be:	04 c0       	rjmp	.+8      	; 0x5c8 <_fpadd_parts+0x148>
     5c0:	88 0f       	add	r24, r24
     5c2:	99 1f       	adc	r25, r25
     5c4:	aa 1f       	adc	r26, r26
     5c6:	bb 1f       	adc	r27, r27
     5c8:	0a 94       	dec	r0
     5ca:	d2 f7       	brpl	.-12     	; 0x5c0 <_fpadd_parts+0x140>
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	a1 09       	sbc	r26, r1
     5d0:	b1 09       	sbc	r27, r1
     5d2:	82 23       	and	r24, r18
     5d4:	93 23       	and	r25, r19
     5d6:	a4 23       	and	r26, r20
     5d8:	b5 23       	and	r27, r21
     5da:	21 e0       	ldi	r18, 0x01	; 1
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	50 e0       	ldi	r21, 0x00	; 0
     5e2:	00 97       	sbiw	r24, 0x00	; 0
     5e4:	a1 05       	cpc	r26, r1
     5e6:	b1 05       	cpc	r27, r1
     5e8:	19 f4       	brne	.+6      	; 0x5f0 <_fpadd_parts+0x170>
     5ea:	20 e0       	ldi	r18, 0x00	; 0
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	a9 01       	movw	r20, r18
     5f0:	26 29       	or	r18, r6
     5f2:	37 29       	or	r19, r7
     5f4:	48 29       	or	r20, r8
     5f6:	59 29       	or	r21, r9
     5f8:	0b c0       	rjmp	.+22     	; 0x610 <_fpadd_parts+0x190>
     5fa:	6c 14       	cp	r6, r12
     5fc:	7d 04       	cpc	r7, r13
     5fe:	24 f4       	brge	.+8      	; 0x608 <_fpadd_parts+0x188>
     600:	ee 24       	eor	r14, r14
     602:	ff 24       	eor	r15, r15
     604:	87 01       	movw	r16, r14
     606:	04 c0       	rjmp	.+8      	; 0x610 <_fpadd_parts+0x190>
     608:	63 01       	movw	r12, r6
     60a:	20 e0       	ldi	r18, 0x00	; 0
     60c:	30 e0       	ldi	r19, 0x00	; 0
     60e:	a9 01       	movw	r20, r18
     610:	81 81       	ldd	r24, Z+1	; 0x01
     612:	fb 01       	movw	r30, r22
     614:	91 81       	ldd	r25, Z+1	; 0x01
     616:	89 17       	cp	r24, r25
     618:	09 f4       	brne	.+2      	; 0x61c <_fpadd_parts+0x19c>
     61a:	45 c0       	rjmp	.+138    	; 0x6a6 <_fpadd_parts+0x226>
     61c:	88 23       	and	r24, r24
     61e:	49 f0       	breq	.+18     	; 0x632 <_fpadd_parts+0x1b2>
     620:	d8 01       	movw	r26, r16
     622:	c7 01       	movw	r24, r14
     624:	82 1b       	sub	r24, r18
     626:	93 0b       	sbc	r25, r19
     628:	a4 0b       	sbc	r26, r20
     62a:	b5 0b       	sbc	r27, r21
     62c:	9c 01       	movw	r18, r24
     62e:	ad 01       	movw	r20, r26
     630:	04 c0       	rjmp	.+8      	; 0x63a <_fpadd_parts+0x1ba>
     632:	2e 19       	sub	r18, r14
     634:	3f 09       	sbc	r19, r15
     636:	40 0b       	sbc	r20, r16
     638:	51 0b       	sbc	r21, r17
     63a:	57 fd       	sbrc	r21, 7
     63c:	04 c0       	rjmp	.+8      	; 0x646 <_fpadd_parts+0x1c6>
     63e:	19 82       	std	Y+1, r1	; 0x01
     640:	db 82       	std	Y+3, r13	; 0x03
     642:	ca 82       	std	Y+2, r12	; 0x02
     644:	0b c0       	rjmp	.+22     	; 0x65c <_fpadd_parts+0x1dc>
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	89 83       	std	Y+1, r24	; 0x01
     64a:	db 82       	std	Y+3, r13	; 0x03
     64c:	ca 82       	std	Y+2, r12	; 0x02
     64e:	50 95       	com	r21
     650:	40 95       	com	r20
     652:	30 95       	com	r19
     654:	21 95       	neg	r18
     656:	3f 4f       	sbci	r19, 0xFF	; 255
     658:	4f 4f       	sbci	r20, 0xFF	; 255
     65a:	5f 4f       	sbci	r21, 0xFF	; 255
     65c:	2c 83       	std	Y+4, r18	; 0x04
     65e:	3d 83       	std	Y+5, r19	; 0x05
     660:	4e 83       	std	Y+6, r20	; 0x06
     662:	5f 83       	std	Y+7, r21	; 0x07
     664:	0d c0       	rjmp	.+26     	; 0x680 <_fpadd_parts+0x200>
     666:	88 0f       	add	r24, r24
     668:	99 1f       	adc	r25, r25
     66a:	aa 1f       	adc	r26, r26
     66c:	bb 1f       	adc	r27, r27
     66e:	8c 83       	std	Y+4, r24	; 0x04
     670:	9d 83       	std	Y+5, r25	; 0x05
     672:	ae 83       	std	Y+6, r26	; 0x06
     674:	bf 83       	std	Y+7, r27	; 0x07
     676:	8a 81       	ldd	r24, Y+2	; 0x02
     678:	9b 81       	ldd	r25, Y+3	; 0x03
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	9b 83       	std	Y+3, r25	; 0x03
     67e:	8a 83       	std	Y+2, r24	; 0x02
     680:	8c 81       	ldd	r24, Y+4	; 0x04
     682:	9d 81       	ldd	r25, Y+5	; 0x05
     684:	ae 81       	ldd	r26, Y+6	; 0x06
     686:	bf 81       	ldd	r27, Y+7	; 0x07
     688:	9c 01       	movw	r18, r24
     68a:	ad 01       	movw	r20, r26
     68c:	21 50       	subi	r18, 0x01	; 1
     68e:	30 40       	sbci	r19, 0x00	; 0
     690:	40 40       	sbci	r20, 0x00	; 0
     692:	50 40       	sbci	r21, 0x00	; 0
     694:	2f 3f       	cpi	r18, 0xFF	; 255
     696:	ef ef       	ldi	r30, 0xFF	; 255
     698:	3e 07       	cpc	r19, r30
     69a:	ef ef       	ldi	r30, 0xFF	; 255
     69c:	4e 07       	cpc	r20, r30
     69e:	ef e3       	ldi	r30, 0x3F	; 63
     6a0:	5e 07       	cpc	r21, r30
     6a2:	08 f3       	brcs	.-62     	; 0x666 <_fpadd_parts+0x1e6>
     6a4:	0b c0       	rjmp	.+22     	; 0x6bc <_fpadd_parts+0x23c>
     6a6:	89 83       	std	Y+1, r24	; 0x01
     6a8:	db 82       	std	Y+3, r13	; 0x03
     6aa:	ca 82       	std	Y+2, r12	; 0x02
     6ac:	2e 0d       	add	r18, r14
     6ae:	3f 1d       	adc	r19, r15
     6b0:	40 1f       	adc	r20, r16
     6b2:	51 1f       	adc	r21, r17
     6b4:	2c 83       	std	Y+4, r18	; 0x04
     6b6:	3d 83       	std	Y+5, r19	; 0x05
     6b8:	4e 83       	std	Y+6, r20	; 0x06
     6ba:	5f 83       	std	Y+7, r21	; 0x07
     6bc:	83 e0       	ldi	r24, 0x03	; 3
     6be:	88 83       	st	Y, r24
     6c0:	2c 81       	ldd	r18, Y+4	; 0x04
     6c2:	3d 81       	ldd	r19, Y+5	; 0x05
     6c4:	4e 81       	ldd	r20, Y+6	; 0x06
     6c6:	5f 81       	ldd	r21, Y+7	; 0x07
     6c8:	57 ff       	sbrs	r21, 7
     6ca:	1d c0       	rjmp	.+58     	; 0x706 <_fpadd_parts+0x286>
     6cc:	da 01       	movw	r26, r20
     6ce:	c9 01       	movw	r24, r18
     6d0:	81 70       	andi	r24, 0x01	; 1
     6d2:	90 70       	andi	r25, 0x00	; 0
     6d4:	a0 70       	andi	r26, 0x00	; 0
     6d6:	b0 70       	andi	r27, 0x00	; 0
     6d8:	56 95       	lsr	r21
     6da:	47 95       	ror	r20
     6dc:	37 95       	ror	r19
     6de:	27 95       	ror	r18
     6e0:	82 2b       	or	r24, r18
     6e2:	93 2b       	or	r25, r19
     6e4:	a4 2b       	or	r26, r20
     6e6:	b5 2b       	or	r27, r21
     6e8:	8c 83       	std	Y+4, r24	; 0x04
     6ea:	9d 83       	std	Y+5, r25	; 0x05
     6ec:	ae 83       	std	Y+6, r26	; 0x06
     6ee:	bf 83       	std	Y+7, r27	; 0x07
     6f0:	8a 81       	ldd	r24, Y+2	; 0x02
     6f2:	9b 81       	ldd	r25, Y+3	; 0x03
     6f4:	01 96       	adiw	r24, 0x01	; 1
     6f6:	9b 83       	std	Y+3, r25	; 0x03
     6f8:	8a 83       	std	Y+2, r24	; 0x02
     6fa:	05 c0       	rjmp	.+10     	; 0x706 <_fpadd_parts+0x286>
     6fc:	e3 e2       	ldi	r30, 0x23	; 35
     6fe:	f1 e0       	ldi	r31, 0x01	; 1
     700:	03 c0       	rjmp	.+6      	; 0x708 <_fpadd_parts+0x288>
     702:	fb 01       	movw	r30, r22
     704:	01 c0       	rjmp	.+2      	; 0x708 <_fpadd_parts+0x288>
     706:	fe 01       	movw	r30, r28
     708:	cf 01       	movw	r24, r30
     70a:	cd b7       	in	r28, 0x3d	; 61
     70c:	de b7       	in	r29, 0x3e	; 62
     70e:	ee e0       	ldi	r30, 0x0E	; 14
     710:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__epilogue_restores__+0x8>

00000714 <__addsf3>:
     714:	a0 e2       	ldi	r26, 0x20	; 32
     716:	b0 e0       	ldi	r27, 0x00	; 0
     718:	e0 e9       	ldi	r30, 0x90	; 144
     71a:	f3 e0       	ldi	r31, 0x03	; 3
     71c:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__prologue_saves__+0x18>
     720:	69 83       	std	Y+1, r22	; 0x01
     722:	7a 83       	std	Y+2, r23	; 0x02
     724:	8b 83       	std	Y+3, r24	; 0x03
     726:	9c 83       	std	Y+4, r25	; 0x04
     728:	2d 83       	std	Y+5, r18	; 0x05
     72a:	3e 83       	std	Y+6, r19	; 0x06
     72c:	4f 83       	std	Y+7, r20	; 0x07
     72e:	58 87       	std	Y+8, r21	; 0x08
     730:	89 e0       	ldi	r24, 0x09	; 9
     732:	e8 2e       	mov	r14, r24
     734:	f1 2c       	mov	r15, r1
     736:	ec 0e       	add	r14, r28
     738:	fd 1e       	adc	r15, r29
     73a:	ce 01       	movw	r24, r28
     73c:	01 96       	adiw	r24, 0x01	; 1
     73e:	b7 01       	movw	r22, r14
     740:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     744:	8e 01       	movw	r16, r28
     746:	0f 5e       	subi	r16, 0xEF	; 239
     748:	1f 4f       	sbci	r17, 0xFF	; 255
     74a:	ce 01       	movw	r24, r28
     74c:	05 96       	adiw	r24, 0x05	; 5
     74e:	b8 01       	movw	r22, r16
     750:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     754:	c7 01       	movw	r24, r14
     756:	b8 01       	movw	r22, r16
     758:	ae 01       	movw	r20, r28
     75a:	47 5e       	subi	r20, 0xE7	; 231
     75c:	5f 4f       	sbci	r21, 0xFF	; 255
     75e:	0e 94 40 02 	call	0x480	; 0x480 <_fpadd_parts>
     762:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__pack_f>
     766:	a0 96       	adiw	r28, 0x20	; 32
     768:	e6 e0       	ldi	r30, 0x06	; 6
     76a:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__epilogue_restores__+0x18>

0000076e <__subsf3>:
     76e:	a0 e2       	ldi	r26, 0x20	; 32
     770:	b0 e0       	ldi	r27, 0x00	; 0
     772:	ed eb       	ldi	r30, 0xBD	; 189
     774:	f3 e0       	ldi	r31, 0x03	; 3
     776:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__prologue_saves__+0x18>
     77a:	69 83       	std	Y+1, r22	; 0x01
     77c:	7a 83       	std	Y+2, r23	; 0x02
     77e:	8b 83       	std	Y+3, r24	; 0x03
     780:	9c 83       	std	Y+4, r25	; 0x04
     782:	2d 83       	std	Y+5, r18	; 0x05
     784:	3e 83       	std	Y+6, r19	; 0x06
     786:	4f 83       	std	Y+7, r20	; 0x07
     788:	58 87       	std	Y+8, r21	; 0x08
     78a:	8e 01       	movw	r16, r28
     78c:	07 5f       	subi	r16, 0xF7	; 247
     78e:	1f 4f       	sbci	r17, 0xFF	; 255
     790:	ce 01       	movw	r24, r28
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	b8 01       	movw	r22, r16
     796:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     79a:	91 e1       	ldi	r25, 0x11	; 17
     79c:	e9 2e       	mov	r14, r25
     79e:	f1 2c       	mov	r15, r1
     7a0:	ec 0e       	add	r14, r28
     7a2:	fd 1e       	adc	r15, r29
     7a4:	ce 01       	movw	r24, r28
     7a6:	05 96       	adiw	r24, 0x05	; 5
     7a8:	b7 01       	movw	r22, r14
     7aa:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     7ae:	8a 89       	ldd	r24, Y+18	; 0x12
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	89 27       	eor	r24, r25
     7b4:	8a 8b       	std	Y+18, r24	; 0x12
     7b6:	c8 01       	movw	r24, r16
     7b8:	b7 01       	movw	r22, r14
     7ba:	ae 01       	movw	r20, r28
     7bc:	47 5e       	subi	r20, 0xE7	; 231
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e 94 40 02 	call	0x480	; 0x480 <_fpadd_parts>
     7c4:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__pack_f>
     7c8:	a0 96       	adiw	r28, 0x20	; 32
     7ca:	e6 e0       	ldi	r30, 0x06	; 6
     7cc:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__epilogue_restores__+0x18>

000007d0 <__mulsf3>:
     7d0:	a0 e2       	ldi	r26, 0x20	; 32
     7d2:	b0 e0       	ldi	r27, 0x00	; 0
     7d4:	ee ee       	ldi	r30, 0xEE	; 238
     7d6:	f3 e0       	ldi	r31, 0x03	; 3
     7d8:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__prologue_saves__>
     7dc:	69 83       	std	Y+1, r22	; 0x01
     7de:	7a 83       	std	Y+2, r23	; 0x02
     7e0:	8b 83       	std	Y+3, r24	; 0x03
     7e2:	9c 83       	std	Y+4, r25	; 0x04
     7e4:	2d 83       	std	Y+5, r18	; 0x05
     7e6:	3e 83       	std	Y+6, r19	; 0x06
     7e8:	4f 83       	std	Y+7, r20	; 0x07
     7ea:	58 87       	std	Y+8, r21	; 0x08
     7ec:	ce 01       	movw	r24, r28
     7ee:	01 96       	adiw	r24, 0x01	; 1
     7f0:	be 01       	movw	r22, r28
     7f2:	67 5f       	subi	r22, 0xF7	; 247
     7f4:	7f 4f       	sbci	r23, 0xFF	; 255
     7f6:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     7fa:	ce 01       	movw	r24, r28
     7fc:	05 96       	adiw	r24, 0x05	; 5
     7fe:	be 01       	movw	r22, r28
     800:	6f 5e       	subi	r22, 0xEF	; 239
     802:	7f 4f       	sbci	r23, 0xFF	; 255
     804:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     808:	99 85       	ldd	r25, Y+9	; 0x09
     80a:	92 30       	cpi	r25, 0x02	; 2
     80c:	78 f0       	brcs	.+30     	; 0x82c <__mulsf3+0x5c>
     80e:	89 89       	ldd	r24, Y+17	; 0x11
     810:	82 30       	cpi	r24, 0x02	; 2
     812:	c0 f0       	brcs	.+48     	; 0x844 <__mulsf3+0x74>
     814:	94 30       	cpi	r25, 0x04	; 4
     816:	19 f4       	brne	.+6      	; 0x81e <__mulsf3+0x4e>
     818:	82 30       	cpi	r24, 0x02	; 2
     81a:	41 f4       	brne	.+16     	; 0x82c <__mulsf3+0x5c>
     81c:	cb c0       	rjmp	.+406    	; 0x9b4 <__mulsf3+0x1e4>
     81e:	84 30       	cpi	r24, 0x04	; 4
     820:	19 f4       	brne	.+6      	; 0x828 <__mulsf3+0x58>
     822:	92 30       	cpi	r25, 0x02	; 2
     824:	79 f4       	brne	.+30     	; 0x844 <__mulsf3+0x74>
     826:	c6 c0       	rjmp	.+396    	; 0x9b4 <__mulsf3+0x1e4>
     828:	92 30       	cpi	r25, 0x02	; 2
     82a:	51 f4       	brne	.+20     	; 0x840 <__mulsf3+0x70>
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	2a 85       	ldd	r18, Y+10	; 0x0a
     830:	9a 89       	ldd	r25, Y+18	; 0x12
     832:	29 17       	cp	r18, r25
     834:	09 f4       	brne	.+2      	; 0x838 <__mulsf3+0x68>
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	8a 87       	std	Y+10, r24	; 0x0a
     83a:	ce 01       	movw	r24, r28
     83c:	09 96       	adiw	r24, 0x09	; 9
     83e:	bc c0       	rjmp	.+376    	; 0x9b8 <__mulsf3+0x1e8>
     840:	82 30       	cpi	r24, 0x02	; 2
     842:	51 f4       	brne	.+20     	; 0x858 <__mulsf3+0x88>
     844:	81 e0       	ldi	r24, 0x01	; 1
     846:	2a 85       	ldd	r18, Y+10	; 0x0a
     848:	9a 89       	ldd	r25, Y+18	; 0x12
     84a:	29 17       	cp	r18, r25
     84c:	09 f4       	brne	.+2      	; 0x850 <__mulsf3+0x80>
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	8a 8b       	std	Y+18, r24	; 0x12
     852:	ce 01       	movw	r24, r28
     854:	41 96       	adiw	r24, 0x11	; 17
     856:	b0 c0       	rjmp	.+352    	; 0x9b8 <__mulsf3+0x1e8>
     858:	6d 84       	ldd	r6, Y+13	; 0x0d
     85a:	7e 84       	ldd	r7, Y+14	; 0x0e
     85c:	8f 84       	ldd	r8, Y+15	; 0x0f
     85e:	98 88       	ldd	r9, Y+16	; 0x10
     860:	ed 88       	ldd	r14, Y+21	; 0x15
     862:	fe 88       	ldd	r15, Y+22	; 0x16
     864:	0f 89       	ldd	r16, Y+23	; 0x17
     866:	18 8d       	ldd	r17, Y+24	; 0x18
     868:	e0 e2       	ldi	r30, 0x20	; 32
     86a:	f0 e0       	ldi	r31, 0x00	; 0
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	dc 01       	movw	r26, r24
     872:	aa 24       	eor	r10, r10
     874:	bb 24       	eor	r11, r11
     876:	65 01       	movw	r12, r10
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	a9 01       	movw	r20, r18
     87e:	b3 01       	movw	r22, r6
     880:	61 70       	andi	r22, 0x01	; 1
     882:	70 70       	andi	r23, 0x00	; 0
     884:	61 15       	cp	r22, r1
     886:	71 05       	cpc	r23, r1
     888:	d1 f0       	breq	.+52     	; 0x8be <__mulsf3+0xee>
     88a:	2e 0d       	add	r18, r14
     88c:	3f 1d       	adc	r19, r15
     88e:	40 1f       	adc	r20, r16
     890:	51 1f       	adc	r21, r17
     892:	15 01       	movw	r2, r10
     894:	26 01       	movw	r4, r12
     896:	28 0e       	add	r2, r24
     898:	39 1e       	adc	r3, r25
     89a:	4a 1e       	adc	r4, r26
     89c:	5b 1e       	adc	r5, r27
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	a0 e0       	ldi	r26, 0x00	; 0
     8a4:	b0 e0       	ldi	r27, 0x00	; 0
     8a6:	2e 15       	cp	r18, r14
     8a8:	3f 05       	cpc	r19, r15
     8aa:	40 07       	cpc	r20, r16
     8ac:	51 07       	cpc	r21, r17
     8ae:	18 f0       	brcs	.+6      	; 0x8b6 <__mulsf3+0xe6>
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	dc 01       	movw	r26, r24
     8b6:	82 0d       	add	r24, r2
     8b8:	93 1d       	adc	r25, r3
     8ba:	a4 1d       	adc	r26, r4
     8bc:	b5 1d       	adc	r27, r5
     8be:	aa 0c       	add	r10, r10
     8c0:	bb 1c       	adc	r11, r11
     8c2:	cc 1c       	adc	r12, r12
     8c4:	dd 1c       	adc	r13, r13
     8c6:	17 ff       	sbrs	r17, 7
     8c8:	09 c0       	rjmp	.+18     	; 0x8dc <__mulsf3+0x10c>
     8ca:	61 e0       	ldi	r22, 0x01	; 1
     8cc:	26 2e       	mov	r2, r22
     8ce:	31 2c       	mov	r3, r1
     8d0:	41 2c       	mov	r4, r1
     8d2:	51 2c       	mov	r5, r1
     8d4:	a2 28       	or	r10, r2
     8d6:	b3 28       	or	r11, r3
     8d8:	c4 28       	or	r12, r4
     8da:	d5 28       	or	r13, r5
     8dc:	31 97       	sbiw	r30, 0x01	; 1
     8de:	49 f0       	breq	.+18     	; 0x8f2 <__mulsf3+0x122>
     8e0:	ee 0c       	add	r14, r14
     8e2:	ff 1c       	adc	r15, r15
     8e4:	00 1f       	adc	r16, r16
     8e6:	11 1f       	adc	r17, r17
     8e8:	96 94       	lsr	r9
     8ea:	87 94       	ror	r8
     8ec:	77 94       	ror	r7
     8ee:	67 94       	ror	r6
     8f0:	c6 cf       	rjmp	.-116    	; 0x87e <__mulsf3+0xae>
     8f2:	6b 89       	ldd	r22, Y+19	; 0x13
     8f4:	7c 89       	ldd	r23, Y+20	; 0x14
     8f6:	eb 85       	ldd	r30, Y+11	; 0x0b
     8f8:	fc 85       	ldd	r31, Y+12	; 0x0c
     8fa:	6e 0f       	add	r22, r30
     8fc:	7f 1f       	adc	r23, r31
     8fe:	6e 5f       	subi	r22, 0xFE	; 254
     900:	7f 4f       	sbci	r23, 0xFF	; 255
     902:	7c 8f       	std	Y+28, r23	; 0x1c
     904:	6b 8f       	std	Y+27, r22	; 0x1b
     906:	61 e0       	ldi	r22, 0x01	; 1
     908:	ea 85       	ldd	r30, Y+10	; 0x0a
     90a:	7a 89       	ldd	r23, Y+18	; 0x12
     90c:	e7 17       	cp	r30, r23
     90e:	09 f4       	brne	.+2      	; 0x912 <__mulsf3+0x142>
     910:	60 e0       	ldi	r22, 0x00	; 0
     912:	6a 8f       	std	Y+26, r22	; 0x1a
     914:	6b 8d       	ldd	r22, Y+27	; 0x1b
     916:	7c 8d       	ldd	r23, Y+28	; 0x1c
     918:	10 c0       	rjmp	.+32     	; 0x93a <__mulsf3+0x16a>
     91a:	fc 01       	movw	r30, r24
     91c:	e1 70       	andi	r30, 0x01	; 1
     91e:	f0 70       	andi	r31, 0x00	; 0
     920:	30 97       	sbiw	r30, 0x00	; 0
     922:	29 f0       	breq	.+10     	; 0x92e <__mulsf3+0x15e>
     924:	56 95       	lsr	r21
     926:	47 95       	ror	r20
     928:	37 95       	ror	r19
     92a:	27 95       	ror	r18
     92c:	50 68       	ori	r21, 0x80	; 128
     92e:	b6 95       	lsr	r27
     930:	a7 95       	ror	r26
     932:	97 95       	ror	r25
     934:	87 95       	ror	r24
     936:	6f 5f       	subi	r22, 0xFF	; 255
     938:	7f 4f       	sbci	r23, 0xFF	; 255
     93a:	b7 fd       	sbrc	r27, 7
     93c:	ee cf       	rjmp	.-36     	; 0x91a <__mulsf3+0x14a>
     93e:	0c c0       	rjmp	.+24     	; 0x958 <__mulsf3+0x188>
     940:	88 0f       	add	r24, r24
     942:	99 1f       	adc	r25, r25
     944:	aa 1f       	adc	r26, r26
     946:	bb 1f       	adc	r27, r27
     948:	57 fd       	sbrc	r21, 7
     94a:	81 60       	ori	r24, 0x01	; 1
     94c:	22 0f       	add	r18, r18
     94e:	33 1f       	adc	r19, r19
     950:	44 1f       	adc	r20, r20
     952:	55 1f       	adc	r21, r21
     954:	61 50       	subi	r22, 0x01	; 1
     956:	70 40       	sbci	r23, 0x00	; 0
     958:	80 30       	cpi	r24, 0x00	; 0
     95a:	e0 e0       	ldi	r30, 0x00	; 0
     95c:	9e 07       	cpc	r25, r30
     95e:	e0 e0       	ldi	r30, 0x00	; 0
     960:	ae 07       	cpc	r26, r30
     962:	e0 e4       	ldi	r30, 0x40	; 64
     964:	be 07       	cpc	r27, r30
     966:	60 f3       	brcs	.-40     	; 0x940 <__mulsf3+0x170>
     968:	6b 8f       	std	Y+27, r22	; 0x1b
     96a:	7c 8f       	std	Y+28, r23	; 0x1c
     96c:	6f e7       	ldi	r22, 0x7F	; 127
     96e:	e6 2e       	mov	r14, r22
     970:	f1 2c       	mov	r15, r1
     972:	01 2d       	mov	r16, r1
     974:	11 2d       	mov	r17, r1
     976:	e8 22       	and	r14, r24
     978:	f9 22       	and	r15, r25
     97a:	0a 23       	and	r16, r26
     97c:	1b 23       	and	r17, r27
     97e:	60 e4       	ldi	r22, 0x40	; 64
     980:	e6 16       	cp	r14, r22
     982:	f1 04       	cpc	r15, r1
     984:	01 05       	cpc	r16, r1
     986:	11 05       	cpc	r17, r1
     988:	61 f4       	brne	.+24     	; 0x9a2 <__mulsf3+0x1d2>
     98a:	87 fd       	sbrc	r24, 7
     98c:	0a c0       	rjmp	.+20     	; 0x9a2 <__mulsf3+0x1d2>
     98e:	21 15       	cp	r18, r1
     990:	31 05       	cpc	r19, r1
     992:	41 05       	cpc	r20, r1
     994:	51 05       	cpc	r21, r1
     996:	29 f0       	breq	.+10     	; 0x9a2 <__mulsf3+0x1d2>
     998:	80 5c       	subi	r24, 0xC0	; 192
     99a:	9f 4f       	sbci	r25, 0xFF	; 255
     99c:	af 4f       	sbci	r26, 0xFF	; 255
     99e:	bf 4f       	sbci	r27, 0xFF	; 255
     9a0:	80 78       	andi	r24, 0x80	; 128
     9a2:	8d 8f       	std	Y+29, r24	; 0x1d
     9a4:	9e 8f       	std	Y+30, r25	; 0x1e
     9a6:	af 8f       	std	Y+31, r26	; 0x1f
     9a8:	b8 a3       	std	Y+32, r27	; 0x20
     9aa:	83 e0       	ldi	r24, 0x03	; 3
     9ac:	89 8f       	std	Y+25, r24	; 0x19
     9ae:	ce 01       	movw	r24, r28
     9b0:	49 96       	adiw	r24, 0x19	; 25
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <__mulsf3+0x1e8>
     9b4:	83 e2       	ldi	r24, 0x23	; 35
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__pack_f>
     9bc:	a0 96       	adiw	r28, 0x20	; 32
     9be:	e2 e1       	ldi	r30, 0x12	; 18
     9c0:	0c 94 68 07 	jmp	0xed0	; 0xed0 <__epilogue_restores__>

000009c4 <__floatsisf>:
     9c4:	a8 e0       	ldi	r26, 0x08	; 8
     9c6:	b0 e0       	ldi	r27, 0x00	; 0
     9c8:	e8 ee       	ldi	r30, 0xE8	; 232
     9ca:	f4 e0       	ldi	r31, 0x04	; 4
     9cc:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__prologue_saves__+0x18>
     9d0:	7b 01       	movw	r14, r22
     9d2:	8c 01       	movw	r16, r24
     9d4:	83 e0       	ldi	r24, 0x03	; 3
     9d6:	89 83       	std	Y+1, r24	; 0x01
     9d8:	d8 01       	movw	r26, r16
     9da:	c7 01       	movw	r24, r14
     9dc:	88 27       	eor	r24, r24
     9de:	b7 fd       	sbrc	r27, 7
     9e0:	83 95       	inc	r24
     9e2:	99 27       	eor	r25, r25
     9e4:	aa 27       	eor	r26, r26
     9e6:	bb 27       	eor	r27, r27
     9e8:	28 2f       	mov	r18, r24
     9ea:	8a 83       	std	Y+2, r24	; 0x02
     9ec:	e1 14       	cp	r14, r1
     9ee:	f1 04       	cpc	r15, r1
     9f0:	01 05       	cpc	r16, r1
     9f2:	11 05       	cpc	r17, r1
     9f4:	19 f4       	brne	.+6      	; 0x9fc <__floatsisf+0x38>
     9f6:	82 e0       	ldi	r24, 0x02	; 2
     9f8:	89 83       	std	Y+1, r24	; 0x01
     9fa:	37 c0       	rjmp	.+110    	; 0xa6a <__floatsisf+0xa6>
     9fc:	8e e1       	ldi	r24, 0x1E	; 30
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	9c 83       	std	Y+4, r25	; 0x04
     a02:	8b 83       	std	Y+3, r24	; 0x03
     a04:	22 23       	and	r18, r18
     a06:	89 f0       	breq	.+34     	; 0xa2a <__floatsisf+0x66>
     a08:	80 e0       	ldi	r24, 0x00	; 0
     a0a:	e8 16       	cp	r14, r24
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	f8 06       	cpc	r15, r24
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	08 07       	cpc	r16, r24
     a14:	80 e8       	ldi	r24, 0x80	; 128
     a16:	18 07       	cpc	r17, r24
     a18:	69 f1       	breq	.+90     	; 0xa74 <__floatsisf+0xb0>
     a1a:	10 95       	com	r17
     a1c:	00 95       	com	r16
     a1e:	f0 94       	com	r15
     a20:	e0 94       	com	r14
     a22:	e1 1c       	adc	r14, r1
     a24:	f1 1c       	adc	r15, r1
     a26:	01 1d       	adc	r16, r1
     a28:	11 1d       	adc	r17, r1
     a2a:	ed 82       	std	Y+5, r14	; 0x05
     a2c:	fe 82       	std	Y+6, r15	; 0x06
     a2e:	0f 83       	std	Y+7, r16	; 0x07
     a30:	18 87       	std	Y+8, r17	; 0x08
     a32:	c8 01       	movw	r24, r16
     a34:	b7 01       	movw	r22, r14
     a36:	0e 94 94 05 	call	0xb28	; 0xb28 <__clzsi2>
     a3a:	9c 01       	movw	r18, r24
     a3c:	21 50       	subi	r18, 0x01	; 1
     a3e:	30 40       	sbci	r19, 0x00	; 0
     a40:	12 16       	cp	r1, r18
     a42:	13 06       	cpc	r1, r19
     a44:	94 f4       	brge	.+36     	; 0xa6a <__floatsisf+0xa6>
     a46:	02 2e       	mov	r0, r18
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <__floatsisf+0x8e>
     a4a:	ee 0c       	add	r14, r14
     a4c:	ff 1c       	adc	r15, r15
     a4e:	00 1f       	adc	r16, r16
     a50:	11 1f       	adc	r17, r17
     a52:	0a 94       	dec	r0
     a54:	d2 f7       	brpl	.-12     	; 0xa4a <__floatsisf+0x86>
     a56:	ed 82       	std	Y+5, r14	; 0x05
     a58:	fe 82       	std	Y+6, r15	; 0x06
     a5a:	0f 83       	std	Y+7, r16	; 0x07
     a5c:	18 87       	std	Y+8, r17	; 0x08
     a5e:	8e e1       	ldi	r24, 0x1E	; 30
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	82 1b       	sub	r24, r18
     a64:	93 0b       	sbc	r25, r19
     a66:	9c 83       	std	Y+4, r25	; 0x04
     a68:	8b 83       	std	Y+3, r24	; 0x03
     a6a:	ce 01       	movw	r24, r28
     a6c:	01 96       	adiw	r24, 0x01	; 1
     a6e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__pack_f>
     a72:	04 c0       	rjmp	.+8      	; 0xa7c <__floatsisf+0xb8>
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	70 e0       	ldi	r23, 0x00	; 0
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	9f ec       	ldi	r25, 0xCF	; 207
     a7c:	28 96       	adiw	r28, 0x08	; 8
     a7e:	e6 e0       	ldi	r30, 0x06	; 6
     a80:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__epilogue_restores__+0x18>

00000a84 <__fixsfsi>:
     a84:	ac e0       	ldi	r26, 0x0C	; 12
     a86:	b0 e0       	ldi	r27, 0x00	; 0
     a88:	e8 e4       	ldi	r30, 0x48	; 72
     a8a:	f5 e0       	ldi	r31, 0x05	; 5
     a8c:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__prologue_saves__+0x20>
     a90:	69 83       	std	Y+1, r22	; 0x01
     a92:	7a 83       	std	Y+2, r23	; 0x02
     a94:	8b 83       	std	Y+3, r24	; 0x03
     a96:	9c 83       	std	Y+4, r25	; 0x04
     a98:	ce 01       	movw	r24, r28
     a9a:	01 96       	adiw	r24, 0x01	; 1
     a9c:	be 01       	movw	r22, r28
     a9e:	6b 5f       	subi	r22, 0xFB	; 251
     aa0:	7f 4f       	sbci	r23, 0xFF	; 255
     aa2:	0e 94 bc 06 	call	0xd78	; 0xd78 <__unpack_f>
     aa6:	8d 81       	ldd	r24, Y+5	; 0x05
     aa8:	82 30       	cpi	r24, 0x02	; 2
     aaa:	81 f1       	breq	.+96     	; 0xb0c <__fixsfsi+0x88>
     aac:	82 30       	cpi	r24, 0x02	; 2
     aae:	70 f1       	brcs	.+92     	; 0xb0c <__fixsfsi+0x88>
     ab0:	84 30       	cpi	r24, 0x04	; 4
     ab2:	21 f4       	brne	.+8      	; 0xabc <__fixsfsi+0x38>
     ab4:	8e 81       	ldd	r24, Y+6	; 0x06
     ab6:	88 23       	and	r24, r24
     ab8:	69 f1       	breq	.+90     	; 0xb14 <__fixsfsi+0x90>
     aba:	0a c0       	rjmp	.+20     	; 0xad0 <__fixsfsi+0x4c>
     abc:	2f 81       	ldd	r18, Y+7	; 0x07
     abe:	38 85       	ldd	r19, Y+8	; 0x08
     ac0:	37 fd       	sbrc	r19, 7
     ac2:	24 c0       	rjmp	.+72     	; 0xb0c <__fixsfsi+0x88>
     ac4:	6e 81       	ldd	r22, Y+6	; 0x06
     ac6:	2f 31       	cpi	r18, 0x1F	; 31
     ac8:	31 05       	cpc	r19, r1
     aca:	3c f0       	brlt	.+14     	; 0xada <__fixsfsi+0x56>
     acc:	66 23       	and	r22, r22
     ace:	11 f1       	breq	.+68     	; 0xb14 <__fixsfsi+0x90>
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	30 e0       	ldi	r19, 0x00	; 0
     ad4:	40 e0       	ldi	r20, 0x00	; 0
     ad6:	50 e8       	ldi	r21, 0x80	; 128
     ad8:	21 c0       	rjmp	.+66     	; 0xb1c <__fixsfsi+0x98>
     ada:	8e e1       	ldi	r24, 0x1E	; 30
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	82 1b       	sub	r24, r18
     ae0:	93 0b       	sbc	r25, r19
     ae2:	29 85       	ldd	r18, Y+9	; 0x09
     ae4:	3a 85       	ldd	r19, Y+10	; 0x0a
     ae6:	4b 85       	ldd	r20, Y+11	; 0x0b
     ae8:	5c 85       	ldd	r21, Y+12	; 0x0c
     aea:	04 c0       	rjmp	.+8      	; 0xaf4 <__fixsfsi+0x70>
     aec:	56 95       	lsr	r21
     aee:	47 95       	ror	r20
     af0:	37 95       	ror	r19
     af2:	27 95       	ror	r18
     af4:	8a 95       	dec	r24
     af6:	d2 f7       	brpl	.-12     	; 0xaec <__fixsfsi+0x68>
     af8:	66 23       	and	r22, r22
     afa:	81 f0       	breq	.+32     	; 0xb1c <__fixsfsi+0x98>
     afc:	50 95       	com	r21
     afe:	40 95       	com	r20
     b00:	30 95       	com	r19
     b02:	21 95       	neg	r18
     b04:	3f 4f       	sbci	r19, 0xFF	; 255
     b06:	4f 4f       	sbci	r20, 0xFF	; 255
     b08:	5f 4f       	sbci	r21, 0xFF	; 255
     b0a:	08 c0       	rjmp	.+16     	; 0xb1c <__fixsfsi+0x98>
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	a9 01       	movw	r20, r18
     b12:	04 c0       	rjmp	.+8      	; 0xb1c <__fixsfsi+0x98>
     b14:	2f ef       	ldi	r18, 0xFF	; 255
     b16:	3f ef       	ldi	r19, 0xFF	; 255
     b18:	4f ef       	ldi	r20, 0xFF	; 255
     b1a:	5f e7       	ldi	r21, 0x7F	; 127
     b1c:	b9 01       	movw	r22, r18
     b1e:	ca 01       	movw	r24, r20
     b20:	2c 96       	adiw	r28, 0x0c	; 12
     b22:	e2 e0       	ldi	r30, 0x02	; 2
     b24:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__epilogue_restores__+0x20>

00000b28 <__clzsi2>:
     b28:	af 92       	push	r10
     b2a:	bf 92       	push	r11
     b2c:	cf 92       	push	r12
     b2e:	df 92       	push	r13
     b30:	ef 92       	push	r14
     b32:	ff 92       	push	r15
     b34:	0f 93       	push	r16
     b36:	1f 93       	push	r17
     b38:	7b 01       	movw	r14, r22
     b3a:	8c 01       	movw	r16, r24
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	e8 16       	cp	r14, r24
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	f8 06       	cpc	r15, r24
     b44:	81 e0       	ldi	r24, 0x01	; 1
     b46:	08 07       	cpc	r16, r24
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	18 07       	cpc	r17, r24
     b4c:	58 f4       	brcc	.+22     	; 0xb64 <__clzsi2+0x3c>
     b4e:	ef ef       	ldi	r30, 0xFF	; 255
     b50:	ee 16       	cp	r14, r30
     b52:	f1 04       	cpc	r15, r1
     b54:	01 05       	cpc	r16, r1
     b56:	11 05       	cpc	r17, r1
     b58:	09 f0       	breq	.+2      	; 0xb5c <__clzsi2+0x34>
     b5a:	90 f4       	brcc	.+36     	; 0xb80 <__clzsi2+0x58>
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	dc 01       	movw	r26, r24
     b62:	17 c0       	rjmp	.+46     	; 0xb92 <__clzsi2+0x6a>
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	ef 16       	cp	r14, r31
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	ff 06       	cpc	r15, r31
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	0f 07       	cpc	r16, r31
     b70:	f1 e0       	ldi	r31, 0x01	; 1
     b72:	1f 07       	cpc	r17, r31
     b74:	50 f4       	brcc	.+20     	; 0xb8a <__clzsi2+0x62>
     b76:	80 e1       	ldi	r24, 0x10	; 16
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	a0 e0       	ldi	r26, 0x00	; 0
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	09 c0       	rjmp	.+18     	; 0xb92 <__clzsi2+0x6a>
     b80:	88 e0       	ldi	r24, 0x08	; 8
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	a0 e0       	ldi	r26, 0x00	; 0
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	04 c0       	rjmp	.+8      	; 0xb92 <__clzsi2+0x6a>
     b8a:	88 e1       	ldi	r24, 0x18	; 24
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	a0 e0       	ldi	r26, 0x00	; 0
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	20 e2       	ldi	r18, 0x20	; 32
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	40 e0       	ldi	r20, 0x00	; 0
     b98:	50 e0       	ldi	r21, 0x00	; 0
     b9a:	28 1b       	sub	r18, r24
     b9c:	39 0b       	sbc	r19, r25
     b9e:	4a 0b       	sbc	r20, r26
     ba0:	5b 0b       	sbc	r21, r27
     ba2:	57 01       	movw	r10, r14
     ba4:	68 01       	movw	r12, r16
     ba6:	04 c0       	rjmp	.+8      	; 0xbb0 <__clzsi2+0x88>
     ba8:	d6 94       	lsr	r13
     baa:	c7 94       	ror	r12
     bac:	b7 94       	ror	r11
     bae:	a7 94       	ror	r10
     bb0:	8a 95       	dec	r24
     bb2:	d2 f7       	brpl	.-12     	; 0xba8 <__clzsi2+0x80>
     bb4:	d6 01       	movw	r26, r12
     bb6:	c5 01       	movw	r24, r10
     bb8:	85 5d       	subi	r24, 0xD5	; 213
     bba:	9e 4f       	sbci	r25, 0xFE	; 254
     bbc:	fc 01       	movw	r30, r24
     bbe:	80 81       	ld	r24, Z
     bc0:	28 1b       	sub	r18, r24
     bc2:	31 09       	sbc	r19, r1
     bc4:	41 09       	sbc	r20, r1
     bc6:	51 09       	sbc	r21, r1
     bc8:	c9 01       	movw	r24, r18
     bca:	1f 91       	pop	r17
     bcc:	0f 91       	pop	r16
     bce:	ff 90       	pop	r15
     bd0:	ef 90       	pop	r14
     bd2:	df 90       	pop	r13
     bd4:	cf 90       	pop	r12
     bd6:	bf 90       	pop	r11
     bd8:	af 90       	pop	r10
     bda:	08 95       	ret

00000bdc <__pack_f>:
     bdc:	ef 92       	push	r14
     bde:	ff 92       	push	r15
     be0:	0f 93       	push	r16
     be2:	1f 93       	push	r17
     be4:	cf 93       	push	r28
     be6:	df 93       	push	r29
     be8:	fc 01       	movw	r30, r24
     bea:	24 81       	ldd	r18, Z+4	; 0x04
     bec:	35 81       	ldd	r19, Z+5	; 0x05
     bee:	46 81       	ldd	r20, Z+6	; 0x06
     bf0:	57 81       	ldd	r21, Z+7	; 0x07
     bf2:	61 81       	ldd	r22, Z+1	; 0x01
     bf4:	80 81       	ld	r24, Z
     bf6:	82 30       	cpi	r24, 0x02	; 2
     bf8:	20 f4       	brcc	.+8      	; 0xc02 <__pack_f+0x26>
     bfa:	40 61       	ori	r20, 0x10	; 16
     bfc:	ef ef       	ldi	r30, 0xFF	; 255
     bfe:	f0 e0       	ldi	r31, 0x00	; 0
     c00:	a3 c0       	rjmp	.+326    	; 0xd48 <__pack_f+0x16c>
     c02:	84 30       	cpi	r24, 0x04	; 4
     c04:	09 f4       	brne	.+2      	; 0xc08 <__pack_f+0x2c>
     c06:	9b c0       	rjmp	.+310    	; 0xd3e <__pack_f+0x162>
     c08:	82 30       	cpi	r24, 0x02	; 2
     c0a:	09 f4       	brne	.+2      	; 0xc0e <__pack_f+0x32>
     c0c:	92 c0       	rjmp	.+292    	; 0xd32 <__pack_f+0x156>
     c0e:	21 15       	cp	r18, r1
     c10:	31 05       	cpc	r19, r1
     c12:	41 05       	cpc	r20, r1
     c14:	51 05       	cpc	r21, r1
     c16:	09 f4       	brne	.+2      	; 0xc1a <__pack_f+0x3e>
     c18:	8f c0       	rjmp	.+286    	; 0xd38 <__pack_f+0x15c>
     c1a:	02 80       	ldd	r0, Z+2	; 0x02
     c1c:	f3 81       	ldd	r31, Z+3	; 0x03
     c1e:	e0 2d       	mov	r30, r0
     c20:	8f ef       	ldi	r24, 0xFF	; 255
     c22:	e2 38       	cpi	r30, 0x82	; 130
     c24:	f8 07       	cpc	r31, r24
     c26:	0c f0       	brlt	.+2      	; 0xc2a <__pack_f+0x4e>
     c28:	5a c0       	rjmp	.+180    	; 0xcde <__pack_f+0x102>
     c2a:	c2 e8       	ldi	r28, 0x82	; 130
     c2c:	df ef       	ldi	r29, 0xFF	; 255
     c2e:	ce 1b       	sub	r28, r30
     c30:	df 0b       	sbc	r29, r31
     c32:	ca 31       	cpi	r28, 0x1A	; 26
     c34:	d1 05       	cpc	r29, r1
     c36:	6c f5       	brge	.+90     	; 0xc92 <__pack_f+0xb6>
     c38:	79 01       	movw	r14, r18
     c3a:	8a 01       	movw	r16, r20
     c3c:	0c 2e       	mov	r0, r28
     c3e:	04 c0       	rjmp	.+8      	; 0xc48 <__pack_f+0x6c>
     c40:	16 95       	lsr	r17
     c42:	07 95       	ror	r16
     c44:	f7 94       	ror	r15
     c46:	e7 94       	ror	r14
     c48:	0a 94       	dec	r0
     c4a:	d2 f7       	brpl	.-12     	; 0xc40 <__pack_f+0x64>
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	a0 e0       	ldi	r26, 0x00	; 0
     c52:	b0 e0       	ldi	r27, 0x00	; 0
     c54:	0c 2e       	mov	r0, r28
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <__pack_f+0x84>
     c58:	88 0f       	add	r24, r24
     c5a:	99 1f       	adc	r25, r25
     c5c:	aa 1f       	adc	r26, r26
     c5e:	bb 1f       	adc	r27, r27
     c60:	0a 94       	dec	r0
     c62:	d2 f7       	brpl	.-12     	; 0xc58 <__pack_f+0x7c>
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	a1 09       	sbc	r26, r1
     c68:	b1 09       	sbc	r27, r1
     c6a:	82 23       	and	r24, r18
     c6c:	93 23       	and	r25, r19
     c6e:	a4 23       	and	r26, r20
     c70:	b5 23       	and	r27, r21
     c72:	21 e0       	ldi	r18, 0x01	; 1
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	40 e0       	ldi	r20, 0x00	; 0
     c78:	50 e0       	ldi	r21, 0x00	; 0
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	a1 05       	cpc	r26, r1
     c7e:	b1 05       	cpc	r27, r1
     c80:	19 f4       	brne	.+6      	; 0xc88 <__pack_f+0xac>
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	a9 01       	movw	r20, r18
     c88:	2e 29       	or	r18, r14
     c8a:	3f 29       	or	r19, r15
     c8c:	40 2b       	or	r20, r16
     c8e:	51 2b       	or	r21, r17
     c90:	03 c0       	rjmp	.+6      	; 0xc98 <__pack_f+0xbc>
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	a9 01       	movw	r20, r18
     c98:	da 01       	movw	r26, r20
     c9a:	c9 01       	movw	r24, r18
     c9c:	8f 77       	andi	r24, 0x7F	; 127
     c9e:	90 70       	andi	r25, 0x00	; 0
     ca0:	a0 70       	andi	r26, 0x00	; 0
     ca2:	b0 70       	andi	r27, 0x00	; 0
     ca4:	80 34       	cpi	r24, 0x40	; 64
     ca6:	91 05       	cpc	r25, r1
     ca8:	a1 05       	cpc	r26, r1
     caa:	b1 05       	cpc	r27, r1
     cac:	39 f4       	brne	.+14     	; 0xcbc <__pack_f+0xe0>
     cae:	27 ff       	sbrs	r18, 7
     cb0:	09 c0       	rjmp	.+18     	; 0xcc4 <__pack_f+0xe8>
     cb2:	20 5c       	subi	r18, 0xC0	; 192
     cb4:	3f 4f       	sbci	r19, 0xFF	; 255
     cb6:	4f 4f       	sbci	r20, 0xFF	; 255
     cb8:	5f 4f       	sbci	r21, 0xFF	; 255
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__pack_f+0xe8>
     cbc:	21 5c       	subi	r18, 0xC1	; 193
     cbe:	3f 4f       	sbci	r19, 0xFF	; 255
     cc0:	4f 4f       	sbci	r20, 0xFF	; 255
     cc2:	5f 4f       	sbci	r21, 0xFF	; 255
     cc4:	e1 e0       	ldi	r30, 0x01	; 1
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	20 30       	cpi	r18, 0x00	; 0
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	38 07       	cpc	r19, r24
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	48 07       	cpc	r20, r24
     cd2:	80 e4       	ldi	r24, 0x40	; 64
     cd4:	58 07       	cpc	r21, r24
     cd6:	28 f5       	brcc	.+74     	; 0xd22 <__pack_f+0x146>
     cd8:	e0 e0       	ldi	r30, 0x00	; 0
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	22 c0       	rjmp	.+68     	; 0xd22 <__pack_f+0x146>
     cde:	e0 38       	cpi	r30, 0x80	; 128
     ce0:	f1 05       	cpc	r31, r1
     ce2:	6c f5       	brge	.+90     	; 0xd3e <__pack_f+0x162>
     ce4:	e1 58       	subi	r30, 0x81	; 129
     ce6:	ff 4f       	sbci	r31, 0xFF	; 255
     ce8:	da 01       	movw	r26, r20
     cea:	c9 01       	movw	r24, r18
     cec:	8f 77       	andi	r24, 0x7F	; 127
     cee:	90 70       	andi	r25, 0x00	; 0
     cf0:	a0 70       	andi	r26, 0x00	; 0
     cf2:	b0 70       	andi	r27, 0x00	; 0
     cf4:	80 34       	cpi	r24, 0x40	; 64
     cf6:	91 05       	cpc	r25, r1
     cf8:	a1 05       	cpc	r26, r1
     cfa:	b1 05       	cpc	r27, r1
     cfc:	39 f4       	brne	.+14     	; 0xd0c <__pack_f+0x130>
     cfe:	27 ff       	sbrs	r18, 7
     d00:	09 c0       	rjmp	.+18     	; 0xd14 <__pack_f+0x138>
     d02:	20 5c       	subi	r18, 0xC0	; 192
     d04:	3f 4f       	sbci	r19, 0xFF	; 255
     d06:	4f 4f       	sbci	r20, 0xFF	; 255
     d08:	5f 4f       	sbci	r21, 0xFF	; 255
     d0a:	04 c0       	rjmp	.+8      	; 0xd14 <__pack_f+0x138>
     d0c:	21 5c       	subi	r18, 0xC1	; 193
     d0e:	3f 4f       	sbci	r19, 0xFF	; 255
     d10:	4f 4f       	sbci	r20, 0xFF	; 255
     d12:	5f 4f       	sbci	r21, 0xFF	; 255
     d14:	57 ff       	sbrs	r21, 7
     d16:	05 c0       	rjmp	.+10     	; 0xd22 <__pack_f+0x146>
     d18:	56 95       	lsr	r21
     d1a:	47 95       	ror	r20
     d1c:	37 95       	ror	r19
     d1e:	27 95       	ror	r18
     d20:	31 96       	adiw	r30, 0x01	; 1
     d22:	87 e0       	ldi	r24, 0x07	; 7
     d24:	56 95       	lsr	r21
     d26:	47 95       	ror	r20
     d28:	37 95       	ror	r19
     d2a:	27 95       	ror	r18
     d2c:	8a 95       	dec	r24
     d2e:	d1 f7       	brne	.-12     	; 0xd24 <__pack_f+0x148>
     d30:	0b c0       	rjmp	.+22     	; 0xd48 <__pack_f+0x16c>
     d32:	e0 e0       	ldi	r30, 0x00	; 0
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	05 c0       	rjmp	.+10     	; 0xd42 <__pack_f+0x166>
     d38:	e0 e0       	ldi	r30, 0x00	; 0
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	05 c0       	rjmp	.+10     	; 0xd48 <__pack_f+0x16c>
     d3e:	ef ef       	ldi	r30, 0xFF	; 255
     d40:	f0 e0       	ldi	r31, 0x00	; 0
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	a9 01       	movw	r20, r18
     d48:	8e 2f       	mov	r24, r30
     d4a:	87 95       	ror	r24
     d4c:	88 27       	eor	r24, r24
     d4e:	87 95       	ror	r24
     d50:	94 2f       	mov	r25, r20
     d52:	9f 77       	andi	r25, 0x7F	; 127
     d54:	67 95       	ror	r22
     d56:	66 27       	eor	r22, r22
     d58:	67 95       	ror	r22
     d5a:	e6 95       	lsr	r30
     d5c:	e2 2e       	mov	r14, r18
     d5e:	a9 2f       	mov	r26, r25
     d60:	a8 2b       	or	r26, r24
     d62:	fe 2f       	mov	r31, r30
     d64:	f6 2b       	or	r31, r22
     d66:	62 2f       	mov	r22, r18
     d68:	73 2f       	mov	r23, r19
     d6a:	8a 2f       	mov	r24, r26
     d6c:	9f 2f       	mov	r25, r31
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	e6 e0       	ldi	r30, 0x06	; 6
     d74:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__epilogue_restores__+0x18>

00000d78 <__unpack_f>:
     d78:	dc 01       	movw	r26, r24
     d7a:	fb 01       	movw	r30, r22
     d7c:	2c 91       	ld	r18, X
     d7e:	11 96       	adiw	r26, 0x01	; 1
     d80:	3c 91       	ld	r19, X
     d82:	11 97       	sbiw	r26, 0x01	; 1
     d84:	12 96       	adiw	r26, 0x02	; 2
     d86:	8c 91       	ld	r24, X
     d88:	12 97       	sbiw	r26, 0x02	; 2
     d8a:	48 2f       	mov	r20, r24
     d8c:	4f 77       	andi	r20, 0x7F	; 127
     d8e:	50 e0       	ldi	r21, 0x00	; 0
     d90:	98 2f       	mov	r25, r24
     d92:	99 1f       	adc	r25, r25
     d94:	99 27       	eor	r25, r25
     d96:	99 1f       	adc	r25, r25
     d98:	13 96       	adiw	r26, 0x03	; 3
     d9a:	6c 91       	ld	r22, X
     d9c:	13 97       	sbiw	r26, 0x03	; 3
     d9e:	86 2f       	mov	r24, r22
     da0:	88 0f       	add	r24, r24
     da2:	89 2b       	or	r24, r25
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	66 1f       	adc	r22, r22
     da8:	66 27       	eor	r22, r22
     daa:	66 1f       	adc	r22, r22
     dac:	61 83       	std	Z+1, r22	; 0x01
     dae:	00 97       	sbiw	r24, 0x00	; 0
     db0:	39 f5       	brne	.+78     	; 0xe00 <__unpack_f+0x88>
     db2:	21 15       	cp	r18, r1
     db4:	31 05       	cpc	r19, r1
     db6:	41 05       	cpc	r20, r1
     db8:	51 05       	cpc	r21, r1
     dba:	11 f4       	brne	.+4      	; 0xdc0 <__unpack_f+0x48>
     dbc:	82 e0       	ldi	r24, 0x02	; 2
     dbe:	29 c0       	rjmp	.+82     	; 0xe12 <__unpack_f+0x9a>
     dc0:	82 e8       	ldi	r24, 0x82	; 130
     dc2:	9f ef       	ldi	r25, 0xFF	; 255
     dc4:	93 83       	std	Z+3, r25	; 0x03
     dc6:	82 83       	std	Z+2, r24	; 0x02
     dc8:	67 e0       	ldi	r22, 0x07	; 7
     dca:	22 0f       	add	r18, r18
     dcc:	33 1f       	adc	r19, r19
     dce:	44 1f       	adc	r20, r20
     dd0:	55 1f       	adc	r21, r21
     dd2:	6a 95       	dec	r22
     dd4:	d1 f7       	brne	.-12     	; 0xdca <__unpack_f+0x52>
     dd6:	83 e0       	ldi	r24, 0x03	; 3
     dd8:	80 83       	st	Z, r24
     dda:	09 c0       	rjmp	.+18     	; 0xdee <__unpack_f+0x76>
     ddc:	22 0f       	add	r18, r18
     dde:	33 1f       	adc	r19, r19
     de0:	44 1f       	adc	r20, r20
     de2:	55 1f       	adc	r21, r21
     de4:	82 81       	ldd	r24, Z+2	; 0x02
     de6:	93 81       	ldd	r25, Z+3	; 0x03
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	93 83       	std	Z+3, r25	; 0x03
     dec:	82 83       	std	Z+2, r24	; 0x02
     dee:	20 30       	cpi	r18, 0x00	; 0
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	38 07       	cpc	r19, r24
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	48 07       	cpc	r20, r24
     df8:	80 e4       	ldi	r24, 0x40	; 64
     dfa:	58 07       	cpc	r21, r24
     dfc:	78 f3       	brcs	.-34     	; 0xddc <__unpack_f+0x64>
     dfe:	20 c0       	rjmp	.+64     	; 0xe40 <__unpack_f+0xc8>
     e00:	8f 3f       	cpi	r24, 0xFF	; 255
     e02:	91 05       	cpc	r25, r1
     e04:	79 f4       	brne	.+30     	; 0xe24 <__unpack_f+0xac>
     e06:	21 15       	cp	r18, r1
     e08:	31 05       	cpc	r19, r1
     e0a:	41 05       	cpc	r20, r1
     e0c:	51 05       	cpc	r21, r1
     e0e:	19 f4       	brne	.+6      	; 0xe16 <__unpack_f+0x9e>
     e10:	84 e0       	ldi	r24, 0x04	; 4
     e12:	80 83       	st	Z, r24
     e14:	08 95       	ret
     e16:	44 ff       	sbrs	r20, 4
     e18:	03 c0       	rjmp	.+6      	; 0xe20 <__unpack_f+0xa8>
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	80 83       	st	Z, r24
     e1e:	10 c0       	rjmp	.+32     	; 0xe40 <__unpack_f+0xc8>
     e20:	10 82       	st	Z, r1
     e22:	0e c0       	rjmp	.+28     	; 0xe40 <__unpack_f+0xc8>
     e24:	8f 57       	subi	r24, 0x7F	; 127
     e26:	90 40       	sbci	r25, 0x00	; 0
     e28:	93 83       	std	Z+3, r25	; 0x03
     e2a:	82 83       	std	Z+2, r24	; 0x02
     e2c:	83 e0       	ldi	r24, 0x03	; 3
     e2e:	80 83       	st	Z, r24
     e30:	87 e0       	ldi	r24, 0x07	; 7
     e32:	22 0f       	add	r18, r18
     e34:	33 1f       	adc	r19, r19
     e36:	44 1f       	adc	r20, r20
     e38:	55 1f       	adc	r21, r21
     e3a:	8a 95       	dec	r24
     e3c:	d1 f7       	brne	.-12     	; 0xe32 <__unpack_f+0xba>
     e3e:	50 64       	ori	r21, 0x40	; 64
     e40:	24 83       	std	Z+4, r18	; 0x04
     e42:	35 83       	std	Z+5, r19	; 0x05
     e44:	46 83       	std	Z+6, r20	; 0x06
     e46:	57 83       	std	Z+7, r21	; 0x07
     e48:	08 95       	ret

00000e4a <__divmodhi4>:
     e4a:	97 fb       	bst	r25, 7
     e4c:	09 2e       	mov	r0, r25
     e4e:	07 26       	eor	r0, r23
     e50:	0a d0       	rcall	.+20     	; 0xe66 <__divmodhi4_neg1>
     e52:	77 fd       	sbrc	r23, 7
     e54:	04 d0       	rcall	.+8      	; 0xe5e <__divmodhi4_neg2>
     e56:	0c d0       	rcall	.+24     	; 0xe70 <__udivmodhi4>
     e58:	06 d0       	rcall	.+12     	; 0xe66 <__divmodhi4_neg1>
     e5a:	00 20       	and	r0, r0
     e5c:	1a f4       	brpl	.+6      	; 0xe64 <__divmodhi4_exit>

00000e5e <__divmodhi4_neg2>:
     e5e:	70 95       	com	r23
     e60:	61 95       	neg	r22
     e62:	7f 4f       	sbci	r23, 0xFF	; 255

00000e64 <__divmodhi4_exit>:
     e64:	08 95       	ret

00000e66 <__divmodhi4_neg1>:
     e66:	f6 f7       	brtc	.-4      	; 0xe64 <__divmodhi4_exit>
     e68:	90 95       	com	r25
     e6a:	81 95       	neg	r24
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	08 95       	ret

00000e70 <__udivmodhi4>:
     e70:	aa 1b       	sub	r26, r26
     e72:	bb 1b       	sub	r27, r27
     e74:	51 e1       	ldi	r21, 0x11	; 17
     e76:	07 c0       	rjmp	.+14     	; 0xe86 <__udivmodhi4_ep>

00000e78 <__udivmodhi4_loop>:
     e78:	aa 1f       	adc	r26, r26
     e7a:	bb 1f       	adc	r27, r27
     e7c:	a6 17       	cp	r26, r22
     e7e:	b7 07       	cpc	r27, r23
     e80:	10 f0       	brcs	.+4      	; 0xe86 <__udivmodhi4_ep>
     e82:	a6 1b       	sub	r26, r22
     e84:	b7 0b       	sbc	r27, r23

00000e86 <__udivmodhi4_ep>:
     e86:	88 1f       	adc	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	5a 95       	dec	r21
     e8c:	a9 f7       	brne	.-22     	; 0xe78 <__udivmodhi4_loop>
     e8e:	80 95       	com	r24
     e90:	90 95       	com	r25
     e92:	bc 01       	movw	r22, r24
     e94:	cd 01       	movw	r24, r26
     e96:	08 95       	ret

00000e98 <__prologue_saves__>:
     e98:	2f 92       	push	r2
     e9a:	3f 92       	push	r3
     e9c:	4f 92       	push	r4
     e9e:	5f 92       	push	r5
     ea0:	6f 92       	push	r6
     ea2:	7f 92       	push	r7
     ea4:	8f 92       	push	r8
     ea6:	9f 92       	push	r9
     ea8:	af 92       	push	r10
     eaa:	bf 92       	push	r11
     eac:	cf 92       	push	r12
     eae:	df 92       	push	r13
     eb0:	ef 92       	push	r14
     eb2:	ff 92       	push	r15
     eb4:	0f 93       	push	r16
     eb6:	1f 93       	push	r17
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	cd b7       	in	r28, 0x3d	; 61
     ebe:	de b7       	in	r29, 0x3e	; 62
     ec0:	ca 1b       	sub	r28, r26
     ec2:	db 0b       	sbc	r29, r27
     ec4:	0f b6       	in	r0, 0x3f	; 63
     ec6:	f8 94       	cli
     ec8:	de bf       	out	0x3e, r29	; 62
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	cd bf       	out	0x3d, r28	; 61
     ece:	09 94       	ijmp

00000ed0 <__epilogue_restores__>:
     ed0:	2a 88       	ldd	r2, Y+18	; 0x12
     ed2:	39 88       	ldd	r3, Y+17	; 0x11
     ed4:	48 88       	ldd	r4, Y+16	; 0x10
     ed6:	5f 84       	ldd	r5, Y+15	; 0x0f
     ed8:	6e 84       	ldd	r6, Y+14	; 0x0e
     eda:	7d 84       	ldd	r7, Y+13	; 0x0d
     edc:	8c 84       	ldd	r8, Y+12	; 0x0c
     ede:	9b 84       	ldd	r9, Y+11	; 0x0b
     ee0:	aa 84       	ldd	r10, Y+10	; 0x0a
     ee2:	b9 84       	ldd	r11, Y+9	; 0x09
     ee4:	c8 84       	ldd	r12, Y+8	; 0x08
     ee6:	df 80       	ldd	r13, Y+7	; 0x07
     ee8:	ee 80       	ldd	r14, Y+6	; 0x06
     eea:	fd 80       	ldd	r15, Y+5	; 0x05
     eec:	0c 81       	ldd	r16, Y+4	; 0x04
     eee:	1b 81       	ldd	r17, Y+3	; 0x03
     ef0:	aa 81       	ldd	r26, Y+2	; 0x02
     ef2:	b9 81       	ldd	r27, Y+1	; 0x01
     ef4:	ce 0f       	add	r28, r30
     ef6:	d1 1d       	adc	r29, r1
     ef8:	0f b6       	in	r0, 0x3f	; 63
     efa:	f8 94       	cli
     efc:	de bf       	out	0x3e, r29	; 62
     efe:	0f be       	out	0x3f, r0	; 63
     f00:	cd bf       	out	0x3d, r28	; 61
     f02:	ed 01       	movw	r28, r26
     f04:	08 95       	ret

00000f06 <sprintf>:
     f06:	0f 93       	push	r16
     f08:	1f 93       	push	r17
     f0a:	df 93       	push	r29
     f0c:	cf 93       	push	r28
     f0e:	cd b7       	in	r28, 0x3d	; 61
     f10:	de b7       	in	r29, 0x3e	; 62
     f12:	2e 97       	sbiw	r28, 0x0e	; 14
     f14:	0f b6       	in	r0, 0x3f	; 63
     f16:	f8 94       	cli
     f18:	de bf       	out	0x3e, r29	; 62
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	cd bf       	out	0x3d, r28	; 61
     f1e:	0d 89       	ldd	r16, Y+21	; 0x15
     f20:	1e 89       	ldd	r17, Y+22	; 0x16
     f22:	86 e0       	ldi	r24, 0x06	; 6
     f24:	8c 83       	std	Y+4, r24	; 0x04
     f26:	1a 83       	std	Y+2, r17	; 0x02
     f28:	09 83       	std	Y+1, r16	; 0x01
     f2a:	8f ef       	ldi	r24, 0xFF	; 255
     f2c:	9f e7       	ldi	r25, 0x7F	; 127
     f2e:	9e 83       	std	Y+6, r25	; 0x06
     f30:	8d 83       	std	Y+5, r24	; 0x05
     f32:	9e 01       	movw	r18, r28
     f34:	27 5e       	subi	r18, 0xE7	; 231
     f36:	3f 4f       	sbci	r19, 0xFF	; 255
     f38:	ce 01       	movw	r24, r28
     f3a:	01 96       	adiw	r24, 0x01	; 1
     f3c:	6f 89       	ldd	r22, Y+23	; 0x17
     f3e:	78 8d       	ldd	r23, Y+24	; 0x18
     f40:	a9 01       	movw	r20, r18
     f42:	0e 94 b3 07 	call	0xf66	; 0xf66 <vfprintf>
     f46:	ef 81       	ldd	r30, Y+7	; 0x07
     f48:	f8 85       	ldd	r31, Y+8	; 0x08
     f4a:	e0 0f       	add	r30, r16
     f4c:	f1 1f       	adc	r31, r17
     f4e:	10 82       	st	Z, r1
     f50:	2e 96       	adiw	r28, 0x0e	; 14
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	de bf       	out	0x3e, r29	; 62
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	cd bf       	out	0x3d, r28	; 61
     f5c:	cf 91       	pop	r28
     f5e:	df 91       	pop	r29
     f60:	1f 91       	pop	r17
     f62:	0f 91       	pop	r16
     f64:	08 95       	ret

00000f66 <vfprintf>:
     f66:	2f 92       	push	r2
     f68:	3f 92       	push	r3
     f6a:	4f 92       	push	r4
     f6c:	5f 92       	push	r5
     f6e:	6f 92       	push	r6
     f70:	7f 92       	push	r7
     f72:	8f 92       	push	r8
     f74:	9f 92       	push	r9
     f76:	af 92       	push	r10
     f78:	bf 92       	push	r11
     f7a:	cf 92       	push	r12
     f7c:	df 92       	push	r13
     f7e:	ef 92       	push	r14
     f80:	ff 92       	push	r15
     f82:	0f 93       	push	r16
     f84:	1f 93       	push	r17
     f86:	df 93       	push	r29
     f88:	cf 93       	push	r28
     f8a:	cd b7       	in	r28, 0x3d	; 61
     f8c:	de b7       	in	r29, 0x3e	; 62
     f8e:	2c 97       	sbiw	r28, 0x0c	; 12
     f90:	0f b6       	in	r0, 0x3f	; 63
     f92:	f8 94       	cli
     f94:	de bf       	out	0x3e, r29	; 62
     f96:	0f be       	out	0x3f, r0	; 63
     f98:	cd bf       	out	0x3d, r28	; 61
     f9a:	6c 01       	movw	r12, r24
     f9c:	1b 01       	movw	r2, r22
     f9e:	8a 01       	movw	r16, r20
     fa0:	fc 01       	movw	r30, r24
     fa2:	17 82       	std	Z+7, r1	; 0x07
     fa4:	16 82       	std	Z+6, r1	; 0x06
     fa6:	83 81       	ldd	r24, Z+3	; 0x03
     fa8:	81 ff       	sbrs	r24, 1
     faa:	d1 c1       	rjmp	.+930    	; 0x134e <__stack+0x24f>
     fac:	2e 01       	movw	r4, r28
     fae:	08 94       	sec
     fb0:	41 1c       	adc	r4, r1
     fb2:	51 1c       	adc	r5, r1
     fb4:	f6 01       	movw	r30, r12
     fb6:	93 81       	ldd	r25, Z+3	; 0x03
     fb8:	f1 01       	movw	r30, r2
     fba:	93 fd       	sbrc	r25, 3
     fbc:	85 91       	lpm	r24, Z+
     fbe:	93 ff       	sbrs	r25, 3
     fc0:	81 91       	ld	r24, Z+
     fc2:	1f 01       	movw	r2, r30
     fc4:	88 23       	and	r24, r24
     fc6:	09 f4       	brne	.+2      	; 0xfca <vfprintf+0x64>
     fc8:	be c1       	rjmp	.+892    	; 0x1346 <__stack+0x247>
     fca:	85 32       	cpi	r24, 0x25	; 37
     fcc:	39 f4       	brne	.+14     	; 0xfdc <vfprintf+0x76>
     fce:	93 fd       	sbrc	r25, 3
     fd0:	85 91       	lpm	r24, Z+
     fd2:	93 ff       	sbrs	r25, 3
     fd4:	81 91       	ld	r24, Z+
     fd6:	1f 01       	movw	r2, r30
     fd8:	85 32       	cpi	r24, 0x25	; 37
     fda:	29 f4       	brne	.+10     	; 0xfe6 <vfprintf+0x80>
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	b6 01       	movw	r22, r12
     fe0:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
     fe4:	e7 cf       	rjmp	.-50     	; 0xfb4 <vfprintf+0x4e>
     fe6:	ee 24       	eor	r14, r14
     fe8:	ff 24       	eor	r15, r15
     fea:	20 e0       	ldi	r18, 0x00	; 0
     fec:	20 32       	cpi	r18, 0x20	; 32
     fee:	b0 f4       	brcc	.+44     	; 0x101c <vfprintf+0xb6>
     ff0:	8b 32       	cpi	r24, 0x2B	; 43
     ff2:	69 f0       	breq	.+26     	; 0x100e <vfprintf+0xa8>
     ff4:	8c 32       	cpi	r24, 0x2C	; 44
     ff6:	28 f4       	brcc	.+10     	; 0x1002 <vfprintf+0x9c>
     ff8:	80 32       	cpi	r24, 0x20	; 32
     ffa:	51 f0       	breq	.+20     	; 0x1010 <vfprintf+0xaa>
     ffc:	83 32       	cpi	r24, 0x23	; 35
     ffe:	71 f4       	brne	.+28     	; 0x101c <vfprintf+0xb6>
    1000:	0b c0       	rjmp	.+22     	; 0x1018 <vfprintf+0xb2>
    1002:	8d 32       	cpi	r24, 0x2D	; 45
    1004:	39 f0       	breq	.+14     	; 0x1014 <vfprintf+0xae>
    1006:	80 33       	cpi	r24, 0x30	; 48
    1008:	49 f4       	brne	.+18     	; 0x101c <vfprintf+0xb6>
    100a:	21 60       	ori	r18, 0x01	; 1
    100c:	2c c0       	rjmp	.+88     	; 0x1066 <vfprintf+0x100>
    100e:	22 60       	ori	r18, 0x02	; 2
    1010:	24 60       	ori	r18, 0x04	; 4
    1012:	29 c0       	rjmp	.+82     	; 0x1066 <vfprintf+0x100>
    1014:	28 60       	ori	r18, 0x08	; 8
    1016:	27 c0       	rjmp	.+78     	; 0x1066 <vfprintf+0x100>
    1018:	20 61       	ori	r18, 0x10	; 16
    101a:	25 c0       	rjmp	.+74     	; 0x1066 <vfprintf+0x100>
    101c:	27 fd       	sbrc	r18, 7
    101e:	2c c0       	rjmp	.+88     	; 0x1078 <vfprintf+0x112>
    1020:	38 2f       	mov	r19, r24
    1022:	30 53       	subi	r19, 0x30	; 48
    1024:	3a 30       	cpi	r19, 0x0A	; 10
    1026:	98 f4       	brcc	.+38     	; 0x104e <vfprintf+0xe8>
    1028:	26 ff       	sbrs	r18, 6
    102a:	08 c0       	rjmp	.+16     	; 0x103c <vfprintf+0xd6>
    102c:	8e 2d       	mov	r24, r14
    102e:	88 0f       	add	r24, r24
    1030:	e8 2e       	mov	r14, r24
    1032:	ee 0c       	add	r14, r14
    1034:	ee 0c       	add	r14, r14
    1036:	e8 0e       	add	r14, r24
    1038:	e3 0e       	add	r14, r19
    103a:	15 c0       	rjmp	.+42     	; 0x1066 <vfprintf+0x100>
    103c:	8f 2d       	mov	r24, r15
    103e:	88 0f       	add	r24, r24
    1040:	f8 2e       	mov	r15, r24
    1042:	ff 0c       	add	r15, r15
    1044:	ff 0c       	add	r15, r15
    1046:	f8 0e       	add	r15, r24
    1048:	f3 0e       	add	r15, r19
    104a:	20 62       	ori	r18, 0x20	; 32
    104c:	0c c0       	rjmp	.+24     	; 0x1066 <vfprintf+0x100>
    104e:	8e 32       	cpi	r24, 0x2E	; 46
    1050:	21 f4       	brne	.+8      	; 0x105a <vfprintf+0xf4>
    1052:	26 fd       	sbrc	r18, 6
    1054:	78 c1       	rjmp	.+752    	; 0x1346 <__stack+0x247>
    1056:	20 64       	ori	r18, 0x40	; 64
    1058:	06 c0       	rjmp	.+12     	; 0x1066 <vfprintf+0x100>
    105a:	8c 36       	cpi	r24, 0x6C	; 108
    105c:	11 f4       	brne	.+4      	; 0x1062 <vfprintf+0xfc>
    105e:	20 68       	ori	r18, 0x80	; 128
    1060:	02 c0       	rjmp	.+4      	; 0x1066 <vfprintf+0x100>
    1062:	88 36       	cpi	r24, 0x68	; 104
    1064:	49 f4       	brne	.+18     	; 0x1078 <vfprintf+0x112>
    1066:	f1 01       	movw	r30, r2
    1068:	93 fd       	sbrc	r25, 3
    106a:	85 91       	lpm	r24, Z+
    106c:	93 ff       	sbrs	r25, 3
    106e:	81 91       	ld	r24, Z+
    1070:	1f 01       	movw	r2, r30
    1072:	88 23       	and	r24, r24
    1074:	09 f0       	breq	.+2      	; 0x1078 <vfprintf+0x112>
    1076:	ba cf       	rjmp	.-140    	; 0xfec <vfprintf+0x86>
    1078:	98 2f       	mov	r25, r24
    107a:	95 54       	subi	r25, 0x45	; 69
    107c:	93 30       	cpi	r25, 0x03	; 3
    107e:	18 f0       	brcs	.+6      	; 0x1086 <vfprintf+0x120>
    1080:	90 52       	subi	r25, 0x20	; 32
    1082:	93 30       	cpi	r25, 0x03	; 3
    1084:	28 f4       	brcc	.+10     	; 0x1090 <vfprintf+0x12a>
    1086:	0c 5f       	subi	r16, 0xFC	; 252
    1088:	1f 4f       	sbci	r17, 0xFF	; 255
    108a:	ff e3       	ldi	r31, 0x3F	; 63
    108c:	f9 83       	std	Y+1, r31	; 0x01
    108e:	0d c0       	rjmp	.+26     	; 0x10aa <vfprintf+0x144>
    1090:	83 36       	cpi	r24, 0x63	; 99
    1092:	31 f0       	breq	.+12     	; 0x10a0 <vfprintf+0x13a>
    1094:	83 37       	cpi	r24, 0x73	; 115
    1096:	71 f0       	breq	.+28     	; 0x10b4 <vfprintf+0x14e>
    1098:	83 35       	cpi	r24, 0x53	; 83
    109a:	09 f0       	breq	.+2      	; 0x109e <vfprintf+0x138>
    109c:	60 c0       	rjmp	.+192    	; 0x115e <__stack+0x5f>
    109e:	22 c0       	rjmp	.+68     	; 0x10e4 <vfprintf+0x17e>
    10a0:	f8 01       	movw	r30, r16
    10a2:	80 81       	ld	r24, Z
    10a4:	89 83       	std	Y+1, r24	; 0x01
    10a6:	0e 5f       	subi	r16, 0xFE	; 254
    10a8:	1f 4f       	sbci	r17, 0xFF	; 255
    10aa:	42 01       	movw	r8, r4
    10ac:	71 e0       	ldi	r23, 0x01	; 1
    10ae:	a7 2e       	mov	r10, r23
    10b0:	b1 2c       	mov	r11, r1
    10b2:	16 c0       	rjmp	.+44     	; 0x10e0 <vfprintf+0x17a>
    10b4:	62 e0       	ldi	r22, 0x02	; 2
    10b6:	66 2e       	mov	r6, r22
    10b8:	71 2c       	mov	r7, r1
    10ba:	60 0e       	add	r6, r16
    10bc:	71 1e       	adc	r7, r17
    10be:	f8 01       	movw	r30, r16
    10c0:	80 80       	ld	r8, Z
    10c2:	91 80       	ldd	r9, Z+1	; 0x01
    10c4:	26 ff       	sbrs	r18, 6
    10c6:	03 c0       	rjmp	.+6      	; 0x10ce <vfprintf+0x168>
    10c8:	6e 2d       	mov	r22, r14
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <vfprintf+0x16c>
    10ce:	6f ef       	ldi	r22, 0xFF	; 255
    10d0:	7f ef       	ldi	r23, 0xFF	; 255
    10d2:	c4 01       	movw	r24, r8
    10d4:	2c 87       	std	Y+12, r18	; 0x0c
    10d6:	0e 94 ce 09 	call	0x139c	; 0x139c <strnlen>
    10da:	5c 01       	movw	r10, r24
    10dc:	83 01       	movw	r16, r6
    10de:	2c 85       	ldd	r18, Y+12	; 0x0c
    10e0:	2f 77       	andi	r18, 0x7F	; 127
    10e2:	17 c0       	rjmp	.+46     	; 0x1112 <__stack+0x13>
    10e4:	52 e0       	ldi	r21, 0x02	; 2
    10e6:	65 2e       	mov	r6, r21
    10e8:	71 2c       	mov	r7, r1
    10ea:	60 0e       	add	r6, r16
    10ec:	71 1e       	adc	r7, r17
    10ee:	f8 01       	movw	r30, r16
    10f0:	80 80       	ld	r8, Z
    10f2:	91 80       	ldd	r9, Z+1	; 0x01
    10f4:	26 ff       	sbrs	r18, 6
    10f6:	03 c0       	rjmp	.+6      	; 0x10fe <vfprintf+0x198>
    10f8:	6e 2d       	mov	r22, r14
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <__stack+0x3>
    10fe:	6f ef       	ldi	r22, 0xFF	; 255
    1100:	7f ef       	ldi	r23, 0xFF	; 255
    1102:	c4 01       	movw	r24, r8
    1104:	2c 87       	std	Y+12, r18	; 0x0c
    1106:	0e 94 c3 09 	call	0x1386	; 0x1386 <strnlen_P>
    110a:	5c 01       	movw	r10, r24
    110c:	2c 85       	ldd	r18, Y+12	; 0x0c
    110e:	20 68       	ori	r18, 0x80	; 128
    1110:	83 01       	movw	r16, r6
    1112:	23 fd       	sbrc	r18, 3
    1114:	20 c0       	rjmp	.+64     	; 0x1156 <__stack+0x57>
    1116:	08 c0       	rjmp	.+16     	; 0x1128 <__stack+0x29>
    1118:	80 e2       	ldi	r24, 0x20	; 32
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	b6 01       	movw	r22, r12
    111e:	2c 87       	std	Y+12, r18	; 0x0c
    1120:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1124:	fa 94       	dec	r15
    1126:	2c 85       	ldd	r18, Y+12	; 0x0c
    1128:	8f 2d       	mov	r24, r15
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	a8 16       	cp	r10, r24
    112e:	b9 06       	cpc	r11, r25
    1130:	98 f3       	brcs	.-26     	; 0x1118 <__stack+0x19>
    1132:	11 c0       	rjmp	.+34     	; 0x1156 <__stack+0x57>
    1134:	f4 01       	movw	r30, r8
    1136:	27 fd       	sbrc	r18, 7
    1138:	85 91       	lpm	r24, Z+
    113a:	27 ff       	sbrs	r18, 7
    113c:	81 91       	ld	r24, Z+
    113e:	4f 01       	movw	r8, r30
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	b6 01       	movw	r22, r12
    1144:	2c 87       	std	Y+12, r18	; 0x0c
    1146:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    114a:	2c 85       	ldd	r18, Y+12	; 0x0c
    114c:	f1 10       	cpse	r15, r1
    114e:	fa 94       	dec	r15
    1150:	08 94       	sec
    1152:	a1 08       	sbc	r10, r1
    1154:	b1 08       	sbc	r11, r1
    1156:	a1 14       	cp	r10, r1
    1158:	b1 04       	cpc	r11, r1
    115a:	61 f7       	brne	.-40     	; 0x1134 <__stack+0x35>
    115c:	f1 c0       	rjmp	.+482    	; 0x1340 <__stack+0x241>
    115e:	84 36       	cpi	r24, 0x64	; 100
    1160:	11 f0       	breq	.+4      	; 0x1166 <__stack+0x67>
    1162:	89 36       	cpi	r24, 0x69	; 105
    1164:	49 f5       	brne	.+82     	; 0x11b8 <__stack+0xb9>
    1166:	27 ff       	sbrs	r18, 7
    1168:	08 c0       	rjmp	.+16     	; 0x117a <__stack+0x7b>
    116a:	f8 01       	movw	r30, r16
    116c:	60 81       	ld	r22, Z
    116e:	71 81       	ldd	r23, Z+1	; 0x01
    1170:	82 81       	ldd	r24, Z+2	; 0x02
    1172:	93 81       	ldd	r25, Z+3	; 0x03
    1174:	0c 5f       	subi	r16, 0xFC	; 252
    1176:	1f 4f       	sbci	r17, 0xFF	; 255
    1178:	09 c0       	rjmp	.+18     	; 0x118c <__stack+0x8d>
    117a:	f8 01       	movw	r30, r16
    117c:	60 81       	ld	r22, Z
    117e:	71 81       	ldd	r23, Z+1	; 0x01
    1180:	88 27       	eor	r24, r24
    1182:	77 fd       	sbrc	r23, 7
    1184:	80 95       	com	r24
    1186:	98 2f       	mov	r25, r24
    1188:	0e 5f       	subi	r16, 0xFE	; 254
    118a:	1f 4f       	sbci	r17, 0xFF	; 255
    118c:	4f e6       	ldi	r20, 0x6F	; 111
    118e:	b4 2e       	mov	r11, r20
    1190:	b2 22       	and	r11, r18
    1192:	97 ff       	sbrs	r25, 7
    1194:	09 c0       	rjmp	.+18     	; 0x11a8 <__stack+0xa9>
    1196:	90 95       	com	r25
    1198:	80 95       	com	r24
    119a:	70 95       	com	r23
    119c:	61 95       	neg	r22
    119e:	7f 4f       	sbci	r23, 0xFF	; 255
    11a0:	8f 4f       	sbci	r24, 0xFF	; 255
    11a2:	9f 4f       	sbci	r25, 0xFF	; 255
    11a4:	f0 e8       	ldi	r31, 0x80	; 128
    11a6:	bf 2a       	or	r11, r31
    11a8:	a2 01       	movw	r20, r4
    11aa:	2a e0       	ldi	r18, 0x0A	; 10
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	0e 94 05 0a 	call	0x140a	; 0x140a <__ultoa_invert>
    11b2:	78 2e       	mov	r7, r24
    11b4:	74 18       	sub	r7, r4
    11b6:	45 c0       	rjmp	.+138    	; 0x1242 <__stack+0x143>
    11b8:	85 37       	cpi	r24, 0x75	; 117
    11ba:	31 f4       	brne	.+12     	; 0x11c8 <__stack+0xc9>
    11bc:	3f ee       	ldi	r19, 0xEF	; 239
    11be:	b3 2e       	mov	r11, r19
    11c0:	b2 22       	and	r11, r18
    11c2:	2a e0       	ldi	r18, 0x0A	; 10
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	25 c0       	rjmp	.+74     	; 0x1212 <__stack+0x113>
    11c8:	99 ef       	ldi	r25, 0xF9	; 249
    11ca:	b9 2e       	mov	r11, r25
    11cc:	b2 22       	and	r11, r18
    11ce:	8f 36       	cpi	r24, 0x6F	; 111
    11d0:	c1 f0       	breq	.+48     	; 0x1202 <__stack+0x103>
    11d2:	80 37       	cpi	r24, 0x70	; 112
    11d4:	20 f4       	brcc	.+8      	; 0x11de <__stack+0xdf>
    11d6:	88 35       	cpi	r24, 0x58	; 88
    11d8:	09 f0       	breq	.+2      	; 0x11dc <__stack+0xdd>
    11da:	b5 c0       	rjmp	.+362    	; 0x1346 <__stack+0x247>
    11dc:	0d c0       	rjmp	.+26     	; 0x11f8 <__stack+0xf9>
    11de:	80 37       	cpi	r24, 0x70	; 112
    11e0:	21 f0       	breq	.+8      	; 0x11ea <__stack+0xeb>
    11e2:	88 37       	cpi	r24, 0x78	; 120
    11e4:	09 f0       	breq	.+2      	; 0x11e8 <__stack+0xe9>
    11e6:	af c0       	rjmp	.+350    	; 0x1346 <__stack+0x247>
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <__stack+0xef>
    11ea:	20 e1       	ldi	r18, 0x10	; 16
    11ec:	b2 2a       	or	r11, r18
    11ee:	b4 fe       	sbrs	r11, 4
    11f0:	0b c0       	rjmp	.+22     	; 0x1208 <__stack+0x109>
    11f2:	84 e0       	ldi	r24, 0x04	; 4
    11f4:	b8 2a       	or	r11, r24
    11f6:	08 c0       	rjmp	.+16     	; 0x1208 <__stack+0x109>
    11f8:	b4 fe       	sbrs	r11, 4
    11fa:	09 c0       	rjmp	.+18     	; 0x120e <__stack+0x10f>
    11fc:	e6 e0       	ldi	r30, 0x06	; 6
    11fe:	be 2a       	or	r11, r30
    1200:	06 c0       	rjmp	.+12     	; 0x120e <__stack+0x10f>
    1202:	28 e0       	ldi	r18, 0x08	; 8
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	05 c0       	rjmp	.+10     	; 0x1212 <__stack+0x113>
    1208:	20 e1       	ldi	r18, 0x10	; 16
    120a:	30 e0       	ldi	r19, 0x00	; 0
    120c:	02 c0       	rjmp	.+4      	; 0x1212 <__stack+0x113>
    120e:	20 e1       	ldi	r18, 0x10	; 16
    1210:	32 e0       	ldi	r19, 0x02	; 2
    1212:	b7 fe       	sbrs	r11, 7
    1214:	08 c0       	rjmp	.+16     	; 0x1226 <__stack+0x127>
    1216:	f8 01       	movw	r30, r16
    1218:	60 81       	ld	r22, Z
    121a:	71 81       	ldd	r23, Z+1	; 0x01
    121c:	82 81       	ldd	r24, Z+2	; 0x02
    121e:	93 81       	ldd	r25, Z+3	; 0x03
    1220:	0c 5f       	subi	r16, 0xFC	; 252
    1222:	1f 4f       	sbci	r17, 0xFF	; 255
    1224:	07 c0       	rjmp	.+14     	; 0x1234 <__stack+0x135>
    1226:	f8 01       	movw	r30, r16
    1228:	60 81       	ld	r22, Z
    122a:	71 81       	ldd	r23, Z+1	; 0x01
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	0e 5f       	subi	r16, 0xFE	; 254
    1232:	1f 4f       	sbci	r17, 0xFF	; 255
    1234:	a2 01       	movw	r20, r4
    1236:	0e 94 05 0a 	call	0x140a	; 0x140a <__ultoa_invert>
    123a:	78 2e       	mov	r7, r24
    123c:	74 18       	sub	r7, r4
    123e:	ff e7       	ldi	r31, 0x7F	; 127
    1240:	bf 22       	and	r11, r31
    1242:	b6 fe       	sbrs	r11, 6
    1244:	0b c0       	rjmp	.+22     	; 0x125c <__stack+0x15d>
    1246:	2e ef       	ldi	r18, 0xFE	; 254
    1248:	b2 22       	and	r11, r18
    124a:	7e 14       	cp	r7, r14
    124c:	38 f4       	brcc	.+14     	; 0x125c <__stack+0x15d>
    124e:	b4 fe       	sbrs	r11, 4
    1250:	07 c0       	rjmp	.+14     	; 0x1260 <__stack+0x161>
    1252:	b2 fc       	sbrc	r11, 2
    1254:	05 c0       	rjmp	.+10     	; 0x1260 <__stack+0x161>
    1256:	8f ee       	ldi	r24, 0xEF	; 239
    1258:	b8 22       	and	r11, r24
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <__stack+0x161>
    125c:	a7 2c       	mov	r10, r7
    125e:	01 c0       	rjmp	.+2      	; 0x1262 <__stack+0x163>
    1260:	ae 2c       	mov	r10, r14
    1262:	8b 2d       	mov	r24, r11
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	b4 fe       	sbrs	r11, 4
    1268:	0d c0       	rjmp	.+26     	; 0x1284 <__stack+0x185>
    126a:	fe 01       	movw	r30, r28
    126c:	e7 0d       	add	r30, r7
    126e:	f1 1d       	adc	r31, r1
    1270:	20 81       	ld	r18, Z
    1272:	20 33       	cpi	r18, 0x30	; 48
    1274:	19 f4       	brne	.+6      	; 0x127c <__stack+0x17d>
    1276:	e9 ee       	ldi	r30, 0xE9	; 233
    1278:	be 22       	and	r11, r30
    127a:	09 c0       	rjmp	.+18     	; 0x128e <__stack+0x18f>
    127c:	a3 94       	inc	r10
    127e:	b2 fe       	sbrs	r11, 2
    1280:	06 c0       	rjmp	.+12     	; 0x128e <__stack+0x18f>
    1282:	04 c0       	rjmp	.+8      	; 0x128c <__stack+0x18d>
    1284:	86 78       	andi	r24, 0x86	; 134
    1286:	90 70       	andi	r25, 0x00	; 0
    1288:	00 97       	sbiw	r24, 0x00	; 0
    128a:	09 f0       	breq	.+2      	; 0x128e <__stack+0x18f>
    128c:	a3 94       	inc	r10
    128e:	8b 2c       	mov	r8, r11
    1290:	99 24       	eor	r9, r9
    1292:	b3 fc       	sbrc	r11, 3
    1294:	14 c0       	rjmp	.+40     	; 0x12be <__stack+0x1bf>
    1296:	b0 fe       	sbrs	r11, 0
    1298:	0f c0       	rjmp	.+30     	; 0x12b8 <__stack+0x1b9>
    129a:	af 14       	cp	r10, r15
    129c:	28 f4       	brcc	.+10     	; 0x12a8 <__stack+0x1a9>
    129e:	e7 2c       	mov	r14, r7
    12a0:	ef 0c       	add	r14, r15
    12a2:	ea 18       	sub	r14, r10
    12a4:	af 2c       	mov	r10, r15
    12a6:	08 c0       	rjmp	.+16     	; 0x12b8 <__stack+0x1b9>
    12a8:	e7 2c       	mov	r14, r7
    12aa:	06 c0       	rjmp	.+12     	; 0x12b8 <__stack+0x1b9>
    12ac:	80 e2       	ldi	r24, 0x20	; 32
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	b6 01       	movw	r22, r12
    12b2:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    12b6:	a3 94       	inc	r10
    12b8:	af 14       	cp	r10, r15
    12ba:	c0 f3       	brcs	.-16     	; 0x12ac <__stack+0x1ad>
    12bc:	04 c0       	rjmp	.+8      	; 0x12c6 <__stack+0x1c7>
    12be:	af 14       	cp	r10, r15
    12c0:	10 f4       	brcc	.+4      	; 0x12c6 <__stack+0x1c7>
    12c2:	fa 18       	sub	r15, r10
    12c4:	01 c0       	rjmp	.+2      	; 0x12c8 <__stack+0x1c9>
    12c6:	ff 24       	eor	r15, r15
    12c8:	84 fe       	sbrs	r8, 4
    12ca:	0f c0       	rjmp	.+30     	; 0x12ea <__stack+0x1eb>
    12cc:	80 e3       	ldi	r24, 0x30	; 48
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	b6 01       	movw	r22, r12
    12d2:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    12d6:	82 fe       	sbrs	r8, 2
    12d8:	1f c0       	rjmp	.+62     	; 0x1318 <__stack+0x219>
    12da:	81 fe       	sbrs	r8, 1
    12dc:	03 c0       	rjmp	.+6      	; 0x12e4 <__stack+0x1e5>
    12de:	88 e5       	ldi	r24, 0x58	; 88
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	10 c0       	rjmp	.+32     	; 0x1304 <__stack+0x205>
    12e4:	88 e7       	ldi	r24, 0x78	; 120
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	0d c0       	rjmp	.+26     	; 0x1304 <__stack+0x205>
    12ea:	c4 01       	movw	r24, r8
    12ec:	86 78       	andi	r24, 0x86	; 134
    12ee:	90 70       	andi	r25, 0x00	; 0
    12f0:	00 97       	sbiw	r24, 0x00	; 0
    12f2:	91 f0       	breq	.+36     	; 0x1318 <__stack+0x219>
    12f4:	81 fc       	sbrc	r8, 1
    12f6:	02 c0       	rjmp	.+4      	; 0x12fc <__stack+0x1fd>
    12f8:	80 e2       	ldi	r24, 0x20	; 32
    12fa:	01 c0       	rjmp	.+2      	; 0x12fe <__stack+0x1ff>
    12fc:	8b e2       	ldi	r24, 0x2B	; 43
    12fe:	b7 fc       	sbrc	r11, 7
    1300:	8d e2       	ldi	r24, 0x2D	; 45
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	b6 01       	movw	r22, r12
    1306:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    130a:	06 c0       	rjmp	.+12     	; 0x1318 <__stack+0x219>
    130c:	80 e3       	ldi	r24, 0x30	; 48
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	b6 01       	movw	r22, r12
    1312:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    1316:	ea 94       	dec	r14
    1318:	7e 14       	cp	r7, r14
    131a:	c0 f3       	brcs	.-16     	; 0x130c <__stack+0x20d>
    131c:	7a 94       	dec	r7
    131e:	f2 01       	movw	r30, r4
    1320:	e7 0d       	add	r30, r7
    1322:	f1 1d       	adc	r31, r1
    1324:	80 81       	ld	r24, Z
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	b6 01       	movw	r22, r12
    132a:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    132e:	77 20       	and	r7, r7
    1330:	a9 f7       	brne	.-22     	; 0x131c <__stack+0x21d>
    1332:	06 c0       	rjmp	.+12     	; 0x1340 <__stack+0x241>
    1334:	80 e2       	ldi	r24, 0x20	; 32
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	b6 01       	movw	r22, r12
    133a:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <fputc>
    133e:	fa 94       	dec	r15
    1340:	ff 20       	and	r15, r15
    1342:	c1 f7       	brne	.-16     	; 0x1334 <__stack+0x235>
    1344:	37 ce       	rjmp	.-914    	; 0xfb4 <vfprintf+0x4e>
    1346:	f6 01       	movw	r30, r12
    1348:	26 81       	ldd	r18, Z+6	; 0x06
    134a:	37 81       	ldd	r19, Z+7	; 0x07
    134c:	02 c0       	rjmp	.+4      	; 0x1352 <__stack+0x253>
    134e:	2f ef       	ldi	r18, 0xFF	; 255
    1350:	3f ef       	ldi	r19, 0xFF	; 255
    1352:	c9 01       	movw	r24, r18
    1354:	2c 96       	adiw	r28, 0x0c	; 12
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	f8 94       	cli
    135a:	de bf       	out	0x3e, r29	; 62
    135c:	0f be       	out	0x3f, r0	; 63
    135e:	cd bf       	out	0x3d, r28	; 61
    1360:	cf 91       	pop	r28
    1362:	df 91       	pop	r29
    1364:	1f 91       	pop	r17
    1366:	0f 91       	pop	r16
    1368:	ff 90       	pop	r15
    136a:	ef 90       	pop	r14
    136c:	df 90       	pop	r13
    136e:	cf 90       	pop	r12
    1370:	bf 90       	pop	r11
    1372:	af 90       	pop	r10
    1374:	9f 90       	pop	r9
    1376:	8f 90       	pop	r8
    1378:	7f 90       	pop	r7
    137a:	6f 90       	pop	r6
    137c:	5f 90       	pop	r5
    137e:	4f 90       	pop	r4
    1380:	3f 90       	pop	r3
    1382:	2f 90       	pop	r2
    1384:	08 95       	ret

00001386 <strnlen_P>:
    1386:	fc 01       	movw	r30, r24
    1388:	05 90       	lpm	r0, Z+
    138a:	61 50       	subi	r22, 0x01	; 1
    138c:	70 40       	sbci	r23, 0x00	; 0
    138e:	01 10       	cpse	r0, r1
    1390:	d8 f7       	brcc	.-10     	; 0x1388 <strnlen_P+0x2>
    1392:	80 95       	com	r24
    1394:	90 95       	com	r25
    1396:	8e 0f       	add	r24, r30
    1398:	9f 1f       	adc	r25, r31
    139a:	08 95       	ret

0000139c <strnlen>:
    139c:	fc 01       	movw	r30, r24
    139e:	61 50       	subi	r22, 0x01	; 1
    13a0:	70 40       	sbci	r23, 0x00	; 0
    13a2:	01 90       	ld	r0, Z+
    13a4:	01 10       	cpse	r0, r1
    13a6:	d8 f7       	brcc	.-10     	; 0x139e <strnlen+0x2>
    13a8:	80 95       	com	r24
    13aa:	90 95       	com	r25
    13ac:	8e 0f       	add	r24, r30
    13ae:	9f 1f       	adc	r25, r31
    13b0:	08 95       	ret

000013b2 <fputc>:
    13b2:	0f 93       	push	r16
    13b4:	1f 93       	push	r17
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	8c 01       	movw	r16, r24
    13bc:	eb 01       	movw	r28, r22
    13be:	8b 81       	ldd	r24, Y+3	; 0x03
    13c0:	81 ff       	sbrs	r24, 1
    13c2:	1b c0       	rjmp	.+54     	; 0x13fa <fputc+0x48>
    13c4:	82 ff       	sbrs	r24, 2
    13c6:	0d c0       	rjmp	.+26     	; 0x13e2 <fputc+0x30>
    13c8:	2e 81       	ldd	r18, Y+6	; 0x06
    13ca:	3f 81       	ldd	r19, Y+7	; 0x07
    13cc:	8c 81       	ldd	r24, Y+4	; 0x04
    13ce:	9d 81       	ldd	r25, Y+5	; 0x05
    13d0:	28 17       	cp	r18, r24
    13d2:	39 07       	cpc	r19, r25
    13d4:	64 f4       	brge	.+24     	; 0x13ee <fputc+0x3c>
    13d6:	e8 81       	ld	r30, Y
    13d8:	f9 81       	ldd	r31, Y+1	; 0x01
    13da:	01 93       	st	Z+, r16
    13dc:	f9 83       	std	Y+1, r31	; 0x01
    13de:	e8 83       	st	Y, r30
    13e0:	06 c0       	rjmp	.+12     	; 0x13ee <fputc+0x3c>
    13e2:	e8 85       	ldd	r30, Y+8	; 0x08
    13e4:	f9 85       	ldd	r31, Y+9	; 0x09
    13e6:	80 2f       	mov	r24, r16
    13e8:	09 95       	icall
    13ea:	00 97       	sbiw	r24, 0x00	; 0
    13ec:	31 f4       	brne	.+12     	; 0x13fa <fputc+0x48>
    13ee:	8e 81       	ldd	r24, Y+6	; 0x06
    13f0:	9f 81       	ldd	r25, Y+7	; 0x07
    13f2:	01 96       	adiw	r24, 0x01	; 1
    13f4:	9f 83       	std	Y+7, r25	; 0x07
    13f6:	8e 83       	std	Y+6, r24	; 0x06
    13f8:	02 c0       	rjmp	.+4      	; 0x13fe <fputc+0x4c>
    13fa:	0f ef       	ldi	r16, 0xFF	; 255
    13fc:	1f ef       	ldi	r17, 0xFF	; 255
    13fe:	c8 01       	movw	r24, r16
    1400:	df 91       	pop	r29
    1402:	cf 91       	pop	r28
    1404:	1f 91       	pop	r17
    1406:	0f 91       	pop	r16
    1408:	08 95       	ret

0000140a <__ultoa_invert>:
    140a:	fa 01       	movw	r30, r20
    140c:	aa 27       	eor	r26, r26
    140e:	28 30       	cpi	r18, 0x08	; 8
    1410:	51 f1       	breq	.+84     	; 0x1466 <__ultoa_invert+0x5c>
    1412:	20 31       	cpi	r18, 0x10	; 16
    1414:	81 f1       	breq	.+96     	; 0x1476 <__ultoa_invert+0x6c>
    1416:	e8 94       	clt
    1418:	6f 93       	push	r22
    141a:	6e 7f       	andi	r22, 0xFE	; 254
    141c:	6e 5f       	subi	r22, 0xFE	; 254
    141e:	7f 4f       	sbci	r23, 0xFF	; 255
    1420:	8f 4f       	sbci	r24, 0xFF	; 255
    1422:	9f 4f       	sbci	r25, 0xFF	; 255
    1424:	af 4f       	sbci	r26, 0xFF	; 255
    1426:	b1 e0       	ldi	r27, 0x01	; 1
    1428:	3e d0       	rcall	.+124    	; 0x14a6 <__ultoa_invert+0x9c>
    142a:	b4 e0       	ldi	r27, 0x04	; 4
    142c:	3c d0       	rcall	.+120    	; 0x14a6 <__ultoa_invert+0x9c>
    142e:	67 0f       	add	r22, r23
    1430:	78 1f       	adc	r23, r24
    1432:	89 1f       	adc	r24, r25
    1434:	9a 1f       	adc	r25, r26
    1436:	a1 1d       	adc	r26, r1
    1438:	68 0f       	add	r22, r24
    143a:	79 1f       	adc	r23, r25
    143c:	8a 1f       	adc	r24, r26
    143e:	91 1d       	adc	r25, r1
    1440:	a1 1d       	adc	r26, r1
    1442:	6a 0f       	add	r22, r26
    1444:	71 1d       	adc	r23, r1
    1446:	81 1d       	adc	r24, r1
    1448:	91 1d       	adc	r25, r1
    144a:	a1 1d       	adc	r26, r1
    144c:	20 d0       	rcall	.+64     	; 0x148e <__ultoa_invert+0x84>
    144e:	09 f4       	brne	.+2      	; 0x1452 <__ultoa_invert+0x48>
    1450:	68 94       	set
    1452:	3f 91       	pop	r19
    1454:	2a e0       	ldi	r18, 0x0A	; 10
    1456:	26 9f       	mul	r18, r22
    1458:	11 24       	eor	r1, r1
    145a:	30 19       	sub	r19, r0
    145c:	30 5d       	subi	r19, 0xD0	; 208
    145e:	31 93       	st	Z+, r19
    1460:	de f6       	brtc	.-74     	; 0x1418 <__ultoa_invert+0xe>
    1462:	cf 01       	movw	r24, r30
    1464:	08 95       	ret
    1466:	46 2f       	mov	r20, r22
    1468:	47 70       	andi	r20, 0x07	; 7
    146a:	40 5d       	subi	r20, 0xD0	; 208
    146c:	41 93       	st	Z+, r20
    146e:	b3 e0       	ldi	r27, 0x03	; 3
    1470:	0f d0       	rcall	.+30     	; 0x1490 <__ultoa_invert+0x86>
    1472:	c9 f7       	brne	.-14     	; 0x1466 <__ultoa_invert+0x5c>
    1474:	f6 cf       	rjmp	.-20     	; 0x1462 <__ultoa_invert+0x58>
    1476:	46 2f       	mov	r20, r22
    1478:	4f 70       	andi	r20, 0x0F	; 15
    147a:	40 5d       	subi	r20, 0xD0	; 208
    147c:	4a 33       	cpi	r20, 0x3A	; 58
    147e:	18 f0       	brcs	.+6      	; 0x1486 <__ultoa_invert+0x7c>
    1480:	49 5d       	subi	r20, 0xD9	; 217
    1482:	31 fd       	sbrc	r19, 1
    1484:	40 52       	subi	r20, 0x20	; 32
    1486:	41 93       	st	Z+, r20
    1488:	02 d0       	rcall	.+4      	; 0x148e <__ultoa_invert+0x84>
    148a:	a9 f7       	brne	.-22     	; 0x1476 <__ultoa_invert+0x6c>
    148c:	ea cf       	rjmp	.-44     	; 0x1462 <__ultoa_invert+0x58>
    148e:	b4 e0       	ldi	r27, 0x04	; 4
    1490:	a6 95       	lsr	r26
    1492:	97 95       	ror	r25
    1494:	87 95       	ror	r24
    1496:	77 95       	ror	r23
    1498:	67 95       	ror	r22
    149a:	ba 95       	dec	r27
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__ultoa_invert+0x86>
    149e:	00 97       	sbiw	r24, 0x00	; 0
    14a0:	61 05       	cpc	r22, r1
    14a2:	71 05       	cpc	r23, r1
    14a4:	08 95       	ret
    14a6:	9b 01       	movw	r18, r22
    14a8:	ac 01       	movw	r20, r24
    14aa:	0a 2e       	mov	r0, r26
    14ac:	06 94       	lsr	r0
    14ae:	57 95       	ror	r21
    14b0:	47 95       	ror	r20
    14b2:	37 95       	ror	r19
    14b4:	27 95       	ror	r18
    14b6:	ba 95       	dec	r27
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <__ultoa_invert+0xa2>
    14ba:	62 0f       	add	r22, r18
    14bc:	73 1f       	adc	r23, r19
    14be:	84 1f       	adc	r24, r20
    14c0:	95 1f       	adc	r25, r21
    14c2:	a0 1d       	adc	r26, r0
    14c4:	08 95       	ret

000014c6 <_exit>:
    14c6:	f8 94       	cli

000014c8 <__stop_program>:
    14c8:	ff cf       	rjmp	.-2      	; 0x14c8 <__stop_program>
